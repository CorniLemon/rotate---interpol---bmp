#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <Windows.h>
#include<vector>
using namespace std;
#include <stdint.h>
#include <algorithm>
#define _USE_MATH_DEFINES
#include <math.h>

static const double angle = 0 * M_PI / 4;//в радианах

static const double sinA = sin(angle);
static const double cosA = cos(angle);

static const char sIn[] = "in3.bmp";
static const char sOut[] = "out3_0Pid4Lans111.bmp";

uint32_t trash = 0;//для заполнения padding
const int sampling = 10;//допустим 10
const int extend = 3;//расширение для интерполяции. менять в зависимости от метода

const double LansoshConst[6001] = { 2.57265e-07, 7.06984e-07, 1.3798e-06, 2.27616e-06, 3.39648e-06, 4.74118e-06, 6.31069e-06, 8.10542e-06, 1.01258e-05, 1.23722e-05, 1.4845e-05, 1.75447e-05, 2.04716e-05, 2.36262e-05, 2.70088e-05, 3.06197e-05, 3.44595e-05, 3.85284e-05, 4.28268e-05, 4.73551e-05, 5.21136e-05, 5.71027e-05, 6.23228e-05, 6.77742e-05, 7.34573e-05, 7.93723e-05, 8.55197e-05, 9.18997e-05, 9.85127e-05, 0.000105359, 0.000112439, 0.000119753, 0.000127301, 0.000135084, 0.000143101, 0.000151354, 0.000159842, 0.000168566, 0.000177525, 0.000186722, 0.000196154, 0.000205824, 0.00021573, 0.000225874, 0.000236256, 0.000246875, 0.000257733, 0.000268829, 0.000280163, 0.000291737, 0.000303549, 0.000315601, 0.000327892, 0.000340423, 0.000353193, 0.000366204, 0.000379455, 0.000392947, 0.000406679, 0.000420653, 0.000434867, 0.000449323, 0.00046402, 0.000478958, 0.000494139, 0.000509561, 0.000525225, 0.000541132, 0.000557281, 0.000573672, 0.000590306, 0.000607183, 0.000624302, 0.000641665, 0.000659271, 0.00067712, 0.000695212, 0.000713548, 0.000732127, 0.00075095, 0.000770016, 0.000789326, 0.00080888, 0.000828678, 0.00084872, 0.000869006, 0.000889536, 0.000910311, 0.000931329, 0.000952592, 0.000974099, 0.00099585, 0.001017845, 0.001040085, 0.001062569, 0.001085298, 0.001108271, 0.001131488, 0.001154949, 0.001178655, 0.001202605, 0.0012268, 0.001251239, 0.001275922, 0.001300849, 0.00132602, 0.001351436, 0.001377096, 0.001402999, 0.001429147, 0.001455538, 0.001482173, 0.001509052, 0.001536175, 0.001563541, 0.00159115, 0.001619003, 0.001647099, 0.001675439, 0.001704021, 0.001732846, 0.001761914, 0.001791225, 0.001820778, 0.001850574, 0.001880611, 0.001910891, 0.001941413, 0.001972176, 0.002003181, 0.002034428, 0.002065916, 0.002097644, 0.002129614, 0.002161824, 0.002194275, 0.002226966, 0.002259897, 0.002293068, 0.002326478, 0.002360128, 0.002394017, 0.002428145, 0.002462511, 0.002497116, 0.002531959, 0.00256704, 0.002602359, 0.002637915, 0.002673708, 0.002709738, 0.002746004, 0.002782507, 0.002819246, 0.00285622, 0.002893429, 0.002930874, 0.002968553, 0.003006466, 0.003044614, 0.003082995, 0.00312161, 0.003160457, 0.003199537, 0.00323885, 0.003278394, 0.00331817, 0.003358178, 0.003398415, 0.003438884, 0.003479582, 0.00352051, 0.003561667, 0.003603053, 0.003644668, 0.00368651, 0.00372858, 0.003770877, 0.003813401, 0.003856151, 0.003899127, 0.003942328, 0.003985754, 0.004029405, 0.004073279, 0.004117377, 0.004161698, 0.004206242, 0.004251007, 0.004295994, 0.004341203, 0.004386631, 0.00443228, 0.004478148, 0.004524235, 0.00457054, 0.004617064, 0.004663805, 0.004710762, 0.004757936, 0.004805325, 0.00485293, 0.004900749, 0.004948783, 0.004997029, 0.005045489, 0.00509416, 0.005143044, 0.005192138, 0.005241443, 0.005290957, 0.005340681, 0.005390613, 0.005440754, 0.005491101, 0.005541656, 0.005592416, 0.005643382, 0.005694552, 0.005745926, 0.005797504, 0.005849284, 0.005901267, 0.005953451, 0.006005835, 0.006058419, 0.006111203, 0.006164185, 0.006217365, 0.006270742, 0.006324316, 0.006378085, 0.006432049, 0.006486207, 0.006540558, 0.006595102, 0.006649839, 0.006704766, 0.006759883, 0.006815191, 0.006870687, 0.006926371, 0.006982242, 0.0070383, 0.007094543, 0.007150972, 0.007207584, 0.007264379, 0.007321357, 0.007378516, 0.007435857, 0.007493377, 0.007551076, 0.007608953, 0.007667007, 0.007725238, 0.007783645, 0.007842226, 0.007900981, 0.007959909, 0.00801901, 0.008078281, 0.008137722, 0.008197333, 0.008257113, 0.00831706, 0.008377173, 0.008437453, 0.008497897, 0.008558504, 0.008619275, 0.008680208, 0.008741301, 0.008802555, 0.008863968, 0.008925538, 0.008987266, 0.00904915, 0.009111189, 0.009173382, 0.009235729, 0.009298227, 0.009360877, 0.009423677, 0.009486626, 0.009549723, 0.009612967, 0.009676357, 0.009739892, 0.009803571, 0.009867393, 0.009931356, 0.009995461, 0.010059705, 0.010124088, 0.010188608, 0.010253265, 0.010318057, 0.010382984, 0.010448044, 0.010513236, 0.010578559, 0.010644011, 0.010709593, 0.010775302, 0.010841138, 0.010907099, 0.010973185, 0.011039393, 0.011105724, 0.011172175, 0.011238746, 0.011305435, 0.011372242, 0.011439165, 0.011506203, 0.011573355, 0.011640619, 0.011707995, 0.011775481, 0.011843076, 0.011910779, 0.011978589, 0.012046504, 0.012114523, 0.012182645, 0.012250868, 0.012319192, 0.012387616, 0.012456137, 0.012524755, 0.012593469, 0.012662277, 0.012731177, 0.01280017, 0.012869253, 0.012938425, 0.013007684, 0.013077031, 0.013146462, 0.013215978, 0.013285576, 0.013355256, 0.013425016, 0.013494854, 0.01356477, 0.013634762, 0.013704828, 0.013774968, 0.01384518, 0.013915463, 0.013985815, 0.014056235, 0.014126722, 0.014197274, 0.01426789, 0.014338569, 0.014409309, 0.014480108, 0.014550966, 0.014621881, 0.014692852, 0.014763877, 0.014834955, 0.014906084, 0.014977263, 0.015048491, 0.015119766, 0.015191087, 0.015262452, 0.01533386, 0.015405309, 0.015476798, 0.015548326, 0.015619891, 0.015691492, 0.015763127, 0.015834794, 0.015906493, 0.015978222, 0.016049979, 0.016121763, 0.016193572, 0.016265405, 0.016337261, 0.016409137, 0.016481033, 0.016552947, 0.016624877, 0.016696821, 0.01676878, 0.01684075, 0.01691273, 0.016984719, 0.017056715, 0.017128718, 0.017200724, 0.017272733, 0.017344743, 0.017416752, 0.01748876, 0.017560763, 0.017632762, 0.017704754, 0.017776738, 0.017848712, 0.017920674, 0.017992624, 0.018064559, 0.018136477, 0.018208378, 0.01828026, 0.01835212, 0.018423958, 0.018495772, 0.01856756, 0.018639321, 0.018711053, 0.018782754, 0.018854422, 0.018926057, 0.018997657, 0.019069219, 0.019140742, 0.019212226, 0.019283667, 0.019355064, 0.019426416, 0.019497721, 0.019568977, 0.019640183, 0.019711337, 0.019782438, 0.019853483, 0.019924471, 0.0199954, 0.020066269, 0.020137076, 0.02020782, 0.020278498, 0.020349109, 0.020419651, 0.020490122, 0.020560522, 0.020630848, 0.020701098, 0.020771271, 0.020841364, 0.020911377, 0.020981308, 0.021051155, 0.021120915, 0.021190589, 0.021260172, 0.021329665, 0.021399065, 0.021468371, 0.02153758, 0.021606691, 0.021675703, 0.021744613, 0.02181342, 0.021882122, 0.021950717, 0.022019204, 0.022087581, 0.022155845, 0.022223996, 0.022292031, 0.022359949, 0.022427748, 0.022495427, 0.022562982, 0.022630413, 0.022697719, 0.022764896, 0.022831943, 0.022898859, 0.022965642, 0.023032289, 0.0230988, 0.023165172, 0.023231404, 0.023297493, 0.023363439, 0.023429238, 0.02349489, 0.023560393, 0.023625744, 0.023690942, 0.023755985, 0.023820872, 0.0238856, 0.023950168, 0.024014573, 0.024078815, 0.024142891, 0.024206799, 0.024270538, 0.024334106, 0.0243975, 0.02446072, 0.024523763, 0.024586627, 0.024649311, 0.024711813, 0.024774131, 0.024836263, 0.024898207, 0.024959961, 0.025021525, 0.025082894, 0.025144069, 0.025205047, 0.025265826, 0.025326404, 0.02538678, 0.025446952, 0.025506917, 0.025566675, 0.025626222, 0.025685558, 0.02574468, 0.025803587, 0.025862276, 0.025920746, 0.025978995, 0.026037022, 0.026094823, 0.026152398, 0.026209744, 0.026266861, 0.026323745, 0.026380394, 0.026436808, 0.026492985, 0.026548921, 0.026604616, 0.026660068, 0.026715274, 0.026770233, 0.026824944, 0.026879403, 0.02693361, 0.026987562, 0.027041258, 0.027094695, 0.027147872, 0.027200787, 0.027253438, 0.027305824, 0.027357941, 0.027409789, 0.027461366, 0.027512669, 0.027563698, 0.027614449, 0.027664921, 0.027715113, 0.027765021, 0.027814646, 0.027863984, 0.027913033, 0.027961793, 0.02801026, 0.028058434, 0.028106312, 0.028153892, 0.028201173, 0.028248153, 0.028294829, 0.0283412, 0.028387264, 0.02843302, 0.028478464, 0.028523597, 0.028568414, 0.028612916, 0.028657099, 0.028700962, 0.028744504, 0.028787721, 0.028830614, 0.028873178, 0.028915414, 0.028957318, 0.028998889, 0.029040125, 0.029081024, 0.029121585, 0.029161806, 0.029201684, 0.029241218, 0.029280406, 0.029319246, 0.029357736, 0.029395875, 0.02943366, 0.02947109, 0.029508163, 0.029544877, 0.029581231, 0.029617221, 0.029652848, 0.029688108, 0.029722999, 0.029757521, 0.029791671, 0.029825448, 0.029858848, 0.029891872, 0.029924517, 0.02995678, 0.029988661, 0.030020157, 0.030051267, 0.030081989, 0.03011232, 0.03014226, 0.030171806, 0.030200957, 0.03022971, 0.030258064, 0.030286018, 0.030313568, 0.030340715, 0.030367454, 0.030393786, 0.030419708, 0.030445218, 0.030470315, 0.030494997, 0.030519261, 0.030543107, 0.030566532, 0.030589535, 0.030612113, 0.030634266, 0.030655991, 0.030677286, 0.03069815, 0.030718582, 0.030738578, 0.030758138, 0.03077726, 0.030795942, 0.030814182, 0.030831978, 0.03084933, 0.030866234, 0.030882689, 0.030898694, 0.030914247, 0.030929346, 0.03094399, 0.030958175, 0.030971902, 0.030985168, 0.030997972, 0.031010311, 0.031022184, 0.03103359, 0.031044526, 0.031054992, 0.031064984, 0.031074502, 0.031083544, 0.031092108, 0.031100193, 0.031107797, 0.031114917, 0.031121554, 0.031127704, 0.031133366, 0.031138539, 0.03114322, 0.031147409, 0.031151103, 0.031154302, 0.031157002, 0.031159203, 0.031160903, 0.031162101, 0.031162794, 0.031162982, 0.031162662, 0.031161832, 0.031160492, 0.03115864, 0.031156274, 0.031153392, 0.031149993, 0.031146076, 0.031141638, 0.031136678, 0.031131195, 0.031125187, 0.031118652, 0.03111159, 0.031103997, 0.031095873, 0.031087217, 0.031078026, 0.031068299, 0.031058035, 0.031047232, 0.031035888, 0.031024002, 0.031011573, 0.030998599, 0.030985078, 0.030971009, 0.030956391, 0.030941222, 0.0309255, 0.030909224, 0.030892393, 0.030875004, 0.030857058, 0.030838551, 0.030819483, 0.030799853, 0.030779658, 0.030758897, 0.03073757, 0.030715673, 0.030693207, 0.03067017, 0.030646559, 0.030622375, 0.030597615, 0.030572277, 0.030546362, 0.030519866, 0.03049279, 0.030465131, 0.030436888, 0.030408059, 0.030378644, 0.030348641, 0.030318049, 0.030286866, 0.030255091, 0.030222722, 0.030189759, 0.0301562, 0.030122043, 0.030087288, 0.030051933, 0.030015977, 0.029979418, 0.029942255, 0.029904488, 0.029866114, 0.029827132, 0.029787541, 0.029747341, 0.029706529, 0.029665104, 0.029623065, 0.029580412, 0.029537142, 0.029493255, 0.029448749, 0.029403623, 0.029357876, 0.029311506, 0.029264513, 0.029216896, 0.029168652, 0.029119782, 0.029070283, 0.029020156, 0.028969397, 0.028918008, 0.028865985, 0.028813329, 0.028760038, 0.02870611, 0.028651546, 0.028596343, 0.028540501, 0.028484019, 0.028426895, 0.028369128, 0.028310718, 0.028251664, 0.028191964, 0.028131616, 0.028070622, 0.028008978, 0.027946685, 0.02788374, 0.027820144, 0.027755895, 0.027690993, 0.027625436, 0.027559222, 0.027492353, 0.027424825, 0.027356639, 0.027287793, 0.027218287, 0.02714812, 0.02707729, 0.027005797, 0.02693364, 0.026860818, 0.02678733, 0.026713175, 0.026638352, 0.026562861, 0.026486701, 0.02640987, 0.026332368, 0.026254194, 0.026175348, 0.026095828, 0.026015634, 0.025934764, 0.025853219, 0.025770997, 0.025688097, 0.025604519, 0.025520262, 0.025435326, 0.025349708, 0.02526341, 0.025176429, 0.025088766, 0.02500042, 0.024911389, 0.024821674, 0.024731273, 0.024640186, 0.024548412, 0.02445595, 0.024362801, 0.024268962, 0.024174435, 0.024079217, 0.023983308, 0.023886709, 0.023789417, 0.023691433, 0.023592756, 0.023493386, 0.023393321, 0.023292562, 0.023191107, 0.023088957, 0.02298611, 0.022882566, 0.022778326, 0.022673387, 0.02256775, 0.022461414, 0.022354379, 0.022246644, 0.022138208, 0.022029073, 0.021919236, 0.021808697, 0.021697457, 0.021585514, 0.021472869, 0.02135952, 0.021245468, 0.021130712, 0.021015252, 0.020899087, 0.020782218, 0.020664643, 0.020546362, 0.020427376, 0.020307683, 0.020187284, 0.020066177, 0.019944364, 0.019821844, 0.019698616, 0.01957468, 0.019450036, 0.019324683, 0.019198622, 0.019071853, 0.018944374, 0.018816187, 0.018687289, 0.018557683, 0.018427367, 0.018296341, 0.018164605, 0.018032159, 0.017899003, 0.017765136, 0.017630559, 0.017495272, 0.017359274, 0.017222566, 0.017085146, 0.016947016, 0.016808175, 0.016668624, 0.016528361, 0.016387388, 0.016245704, 0.016103309, 0.015960203, 0.015816386, 0.015671859, 0.015526621, 0.015380672, 0.015234013, 0.015086643, 0.014938563, 0.014789772, 0.014640272, 0.014490061, 0.014339141, 0.01418751, 0.01403517, 0.013882121, 0.013728362, 0.013573895, 0.013418718, 0.013262833, 0.013106239, 0.012948937, 0.012790927, 0.012632209, 0.012472784, 0.012312652, 0.012151812, 0.011990266, 0.011828014, 0.011665056, 0.011501392, 0.011337023, 0.011171948, 0.011006169, 0.010839686, 0.010672499, 0.010504608, 0.010336015, 0.010166718, 0.009996719, 0.009826019, 0.009654617, 0.009482514, 0.009309711, 0.009136208, 0.008962005, 0.008787103, 0.008611503, 0.008435204, 0.008258209, 0.008080516, 0.007902127, 0.007723043, 0.007543263, 0.007362788, 0.00718162, 0.006999758, 0.006817203, 0.006633957, 0.006450019, 0.006265389, 0.00608007, 0.005894062, 0.005707364, 0.005519978, 0.005331905, 0.005143146, 0.0049537, 0.00476357, 0.004572754, 0.004381256, 0.004189074, 0.00399621, 0.003802665, 0.00360844, 0.003413534, 0.00321795, 0.003021689, 0.00282475, 0.002627134, 0.002428844, 0.002229879, 0.00203024, 0.001829929, 0.001628946, 0.001427293, 0.001224969, 0.001021977, 0.000818317, 0.00061399, 0.000408997, 0.00020334, -2.98174e-06, -0.000209966, -0.000417612, -0.000625919, -0.000834885, -0.00104451, -0.001254793, -0.001465732, -0.001677326, -0.001889574, -0.002102475, -0.002316028, -0.002530232, -0.002745085, -0.002960586, -0.003176735, -0.00339353, -0.003610969, -0.003829052, -0.004047777, -0.004267142, -0.004487148, -0.004707792, -0.004929073, -0.00515099, -0.005373542, -0.005596726, -0.005820543, -0.00604499, -0.006270066, -0.00649577, -0.0067221, -0.006949055, -0.007176634, -0.007404835, -0.007633657, -0.007863098, -0.008093157, -0.008323832, -0.008555122, -0.008787025, -0.00901954, -0.009252666, -0.009486401, -0.009720742, -0.00995569, -0.010191242, -0.010427396, -0.010664151, -0.010901506, -0.011139459, -0.011378007, -0.011617151, -0.011856887, -0.012097214, -0.012338131, -0.012579636, -0.012821728, -0.013064403, -0.013307662, -0.013551501, -0.01379592, -0.014040917, -0.014286489, -0.014532635, -0.014779353, -0.015026642, -0.0152745, -0.015522924, -0.015771913, -0.016021466, -0.016271579, -0.016522252, -0.016773483, -0.017025269, -0.017277609, -0.0175305, -0.017783942, -0.018037931, -0.018292466, -0.018547545, -0.018803166, -0.019059327, -0.019316026, -0.019573262, -0.019831031, -0.020089332, -0.020348162, -0.020607521, -0.020867405, -0.021127813, -0.021388743, -0.021650192, -0.021912158, -0.022174639, -0.022437634, -0.022701139, -0.022965153, -0.023229674, -0.023494699, -0.023760225, -0.024026252, -0.024292777, -0.024559797, -0.02482731, -0.025095314, -0.025363807, -0.025632786, -0.025902249, -0.026172194, -0.026442618, -0.026713519, -0.026984895, -0.027256744, -0.027529062, -0.027801848, -0.0280751, -0.028348814, -0.028622988, -0.028897621, -0.029172709, -0.02944825, -0.029724242, -0.030000682, -0.030277567, -0.030554896, -0.030832665, -0.031110873, -0.031389516, -0.031668592, -0.031948099, -0.032228033, -0.032508393, -0.032789176, -0.033070379, -0.033351999, -0.033634034, -0.033916482, -0.034199339, -0.034482603, -0.034766271, -0.035050341, -0.03533481, -0.035619675, -0.035904933, -0.036190583, -0.03647662, -0.036763042, -0.037049847, -0.037337032, -0.037624594, -0.037912529, -0.038200836, -0.038489512, -0.038778553, -0.039067957, -0.039357721, -0.039647842, -0.039938317, -0.040229144, -0.040520319, -0.040811839, -0.041103702, -0.041395905, -0.041688444, -0.041981318, -0.042274521, -0.042568053, -0.04286191, -0.043156088, -0.043450585, -0.043745398, -0.044040524, -0.044335959, -0.044631701, -0.044927747, -0.045224093, -0.045520736, -0.045817674, -0.046114903, -0.04641242, -0.046710222, -0.047008306, -0.047306668, -0.047605306, -0.047904216, -0.048203395, -0.04850284, -0.048802548, -0.049102515, -0.049402738, -0.049703215, -0.050003941, -0.050304914, -0.05060613, -0.050907585, -0.051209278, -0.051511203, -0.051813359, -0.052115741, -0.052418347, -0.052721173, -0.053024215, -0.053327471, -0.053630936, -0.053934608, -0.054238483, -0.054542558, -0.054846829, -0.055151292, -0.055455945, -0.055760784, -0.056065806, -0.056371006, -0.056676382, -0.05698193, -0.057287647, -0.057593528, -0.057899571, -0.058205772, -0.058512127, -0.058818633, -0.059125286, -0.059432083, -0.05973902, -0.060046094, -0.0603533, -0.060660636, -0.060968097, -0.061275681, -0.061583383, -0.061891199, -0.062199127, -0.062507162, -0.0628153, -0.063123539, -0.063431874, -0.063740301, -0.064048818, -0.064357419, -0.064666102, -0.064974863, -0.065283697, -0.065592602, -0.065901573, -0.066210606, -0.066519698, -0.066828845, -0.067138043, -0.067447288, -0.067756577, -0.068065906, -0.06837527, -0.068684666, -0.06899409, -0.069303538, -0.069613006, -0.06992249, -0.070231987, -0.070541493, -0.070851003, -0.071160513, -0.071470021, -0.071779521, -0.072089009, -0.072398483, -0.072707937, -0.073017368, -0.073326772, -0.073636145, -0.073945482, -0.07425478, -0.074564035, -0.074873242, -0.075182398, -0.075491499, -0.07580054, -0.076109517, -0.076418427, -0.076727264, -0.077036026, -0.077344708, -0.077653306, -0.077961816, -0.078270233, -0.078578553, -0.078886773, -0.079194888, -0.079502894, -0.079810786, -0.080118562, -0.080426215, -0.080733743, -0.081041141, -0.081348404, -0.081655529, -0.081962511, -0.082269347, -0.082576031, -0.08288256, -0.083188928, -0.083495133, -0.08380117, -0.084107034, -0.084412721, -0.084718227, -0.085023548, -0.085328678, -0.085633615, -0.085938353, -0.086242888, -0.086547216, -0.086851332, -0.087155233, -0.087458913, -0.087762368, -0.088065595, -0.088368588, -0.088671343, -0.088973856, -0.089276123, -0.089578138, -0.089879898, -0.090181397, -0.090482633, -0.090783599, -0.091084293, -0.091384708, -0.091684841, -0.091984688, -0.092284243, -0.092583503, -0.092882462, -0.093181117, -0.093479462, -0.093777494, -0.094075208, -0.094372598, -0.094669662, -0.094966394, -0.095262789, -0.095558843, -0.095854552, -0.09614991, -0.096444914, -0.096739559, -0.09703384, -0.097327753, -0.097621292, -0.097914454, -0.098207234, -0.098499627, -0.098791628, -0.099083233, -0.099374438, -0.099665237, -0.099955626, -0.100245601, -0.100535156, -0.100824287, -0.10111299, -0.10140126, -0.101689091, -0.10197648, -0.102263421, -0.10254991, -0.102835943, -0.103121514, -0.103406619, -0.103691253, -0.103975412, -0.10425909, -0.104542284, -0.104824987, -0.105107196, -0.105388906, -0.105670112, -0.105950809, -0.106230992, -0.106510657, -0.1067898, -0.107068414, -0.107346496, -0.107624041, -0.107901043, -0.108177499, -0.108453402, -0.10872875, -0.109003536, -0.109277756, -0.109551405, -0.109824478, -0.110096971, -0.110368878, -0.110640195, -0.110910917, -0.111181039, -0.111450557, -0.111719465, -0.111987759, -0.112255433, -0.112522483, -0.112788905, -0.113054693, -0.113319842, -0.113584347, -0.113848204, -0.114111408, -0.114373954, -0.114635836, -0.114897051, -0.115157593, -0.115417458, -0.11567664, -0.115935134, -0.116192936, -0.116450041, -0.116706444, -0.116962139, -0.117217123, -0.11747139, -0.117724935, -0.117977753, -0.11822984, -0.11848119, -0.118731799, -0.118981661, -0.119230772, -0.119479127, -0.119726721, -0.119973548, -0.120219605, -0.120464885, -0.120709385, -0.120953099, -0.121196022, -0.121438149, -0.121679475, -0.121919996, -0.122159706, -0.122398601, -0.122636675, -0.122873923, -0.123110342, -0.123345924, -0.123580667, -0.123814564, -0.124047611, -0.124279802, -0.124511134, -0.1247416, -0.124971196, -0.125199917, -0.125427758, -0.125654713, -0.125880779, -0.12610595, -0.12633022, -0.126553586, -0.126776042, -0.126997583, -0.127218204, -0.1274379, -0.127656666, -0.127874497, -0.128091389, -0.128307336, -0.128522333, -0.128736375, -0.128949457, -0.129161575, -0.129372723, -0.129582897, -0.12979209, -0.130000299, -0.130207519, -0.130413744, -0.130618969, -0.13082319, -0.131026401, -0.131228598, -0.131429775, -0.131629928, -0.131829051, -0.13202714, -0.132224189, -0.132420194, -0.13261515, -0.132809051, -0.133001893, -0.133193671, -0.133384379, -0.133574013, -0.133762568, -0.133950039, -0.134136421, -0.134321709, -0.134505897, -0.134688982, -0.134870957, -0.135051819, -0.135231562, -0.135410181, -0.135587671, -0.135764027, -0.135939244, -0.136113318, -0.136286243, -0.136458015, -0.136628628, -0.136798078, -0.136966359, -0.137133467, -0.137299397, -0.137464143, -0.137627702, -0.137790067, -0.137951234, -0.138111199, -0.138269955, -0.138427499, -0.138583825, -0.138738928, -0.138892804, -0.139045448, -0.139196854, -0.139347018, -0.139495935, -0.1396436, -0.139790008, -0.139935154, -0.140079033, -0.140221641, -0.140362973, -0.140503023, -0.140641787, -0.14077926, -0.140915436, -0.141050312, -0.141183883, -0.141316143, -0.141447087, -0.141576711, -0.141705011, -0.14183198, -0.141957614, -0.142081909, -0.14220486, -0.142326461, -0.142446708, -0.142565597, -0.142683121, -0.142799277, -0.14291406, -0.143027465, -0.143139487, -0.143250121, -0.143359362, -0.143467207, -0.143573649, -0.143678685, -0.143782309, -0.143884517, -0.143985303, -0.144084664, -0.144182594, -0.144279089, -0.144374144, -0.144467754, -0.144559915, -0.144650621, -0.144739868, -0.144827652, -0.144913967, -0.14499881, -0.145082174, -0.145164056, -0.145244451, -0.145323354, -0.145400761, -0.145476667, -0.145551066, -0.145623956, -0.14569533, -0.145765185, -0.145833515, -0.145900316, -0.145965584, -0.146029313, -0.1460915, -0.146152139, -0.146211226, -0.146268757, -0.146324726, -0.14637913, -0.146431963, -0.146483222, -0.146532901, -0.146580996, -0.146627502, -0.146672416, -0.146715732, -0.146757445, -0.146797552, -0.146836048, -0.146872929, -0.146908189, -0.146941825, -0.146973832, -0.147004205, -0.14703294, -0.147060032, -0.147085478, -0.147109273, -0.147131412, -0.14715189, -0.147170704, -0.147187849, -0.147203321, -0.147217115, -0.147229226, -0.147239652, -0.147248386, -0.147255425, -0.147260765, -0.1472644, -0.147266328, -0.147266542, -0.14726504, -0.147261817, -0.147256868, -0.14725019, -0.147241777, -0.147231626, -0.147219733, -0.147206092, -0.147190701, -0.147173554, -0.147154648, -0.147133978, -0.14711154, -0.14708733, -0.147061344, -0.147033577, -0.147004025, -0.146972685, -0.146939552, -0.146904621, -0.14686789, -0.146829353, -0.146789006, -0.146746846, -0.146702868, -0.146657069, -0.146609444, -0.146559988, -0.146508699, -0.146455572, -0.146400603, -0.146343788, -0.146285123, -0.146224604, -0.146162227, -0.146097989, -0.146031884, -0.145963909, -0.14589406, -0.145822334, -0.145748726, -0.145673232, -0.145595849, -0.145516573, -0.145435399, -0.145352324, -0.145267344, -0.145180455, -0.145091654, -0.145000936, -0.144908298, -0.144813736, -0.144717245, -0.144618823, -0.144518466, -0.14441617, -0.14431193, -0.144205744, -0.144097608, -0.143987517, -0.143875469, -0.143761459, -0.143645484, -0.14352754, -0.143407624, -0.143285731, -0.143161859, -0.143036004, -0.142908162, -0.142778329, -0.142646502, -0.142512677, -0.142376852, -0.142239021, -0.142099183, -0.141957332, -0.141813467, -0.141667582, -0.141519676, -0.141369743, -0.141217782, -0.141063788, -0.140907758, -0.140749688, -0.140589576, -0.140427418, -0.14026321, -0.140096949, -0.139928632, -0.139758256, -0.139585817, -0.139411311, -0.139234736, -0.139056088, -0.138875364, -0.138692561, -0.138507676, -0.138320705, -0.138131645, -0.137940492, -0.137747245, -0.137551899, -0.137354451, -0.137154899, -0.136953239, -0.136749468, -0.136543583, -0.13633558, -0.136125458, -0.135913212, -0.13569884, -0.135482339, -0.135263705, -0.135042936, -0.134820028, -0.13459498, -0.134367787, -0.134138447, -0.133906957, -0.133673314, -0.133437515, -0.133199558, -0.132959439, -0.132717155, -0.132472704, -0.132226083, -0.131977289, -0.131726319, -0.131473171, -0.131217842, -0.130960329, -0.130700629, -0.13043874, -0.130174659, -0.129908382, -0.129639909, -0.129369235, -0.129096359, -0.128821278, -0.128543988, -0.128264488, -0.127982775, -0.127698847, -0.1274127, -0.127124333, -0.126833742, -0.126540926, -0.126245881, -0.125948606, -0.125649098, -0.125347355, -0.125043374, -0.124737152, -0.124428688, -0.124117979, -0.123805022, -0.123489816, -0.123172358, -0.122852645, -0.122530676, -0.122206449, -0.12187996, -0.121551208, -0.12122019, -0.120886905, -0.12055135, -0.120213523, -0.119873422, -0.119531044, -0.119186388, -0.118839452, -0.118490233, -0.11813873, -0.11778494, -0.117428861, -0.117070491, -0.116709829, -0.116346873, -0.115981619, -0.115614068, -0.115244215, -0.114872061, -0.114497602, -0.114120837, -0.113741764, -0.113360381, -0.112976687, -0.11259068, -0.112202357, -0.111811717, -0.111418759, -0.11102348, -0.11062588, -0.110225955, -0.109823705, -0.109419128, -0.109012222, -0.108602986, -0.108191418, -0.107777516, -0.10736128, -0.106942706, -0.106521795, -0.106098543, -0.105672951, -0.105245016, -0.104814737, -0.104382112, -0.103947141, -0.103509821, -0.103070152, -0.102628131, -0.102183758, -0.101737031, -0.10128795, -0.100836512, -0.100382716, -0.099926561, -0.099468047, -0.099007171, -0.098543933, -0.098078331, -0.097610364, -0.097140032, -0.096667332, -0.096192264, -0.095714827, -0.09523502, -0.094752842, -0.094268291, -0.093781367, -0.093292068, -0.092800394, -0.092306344, -0.091809917, -0.091311112, -0.090809928, -0.090306364, -0.08980042, -0.089292094, -0.088781386, -0.088268294, -0.087752819, -0.08723496, -0.086714715, -0.086192084, -0.085667066, -0.085139661, -0.084609868, -0.084077687, -0.083543116, -0.083006155, -0.082466804, -0.081925062, -0.081380928, -0.080834402, -0.080285484, -0.079734173, -0.079180468, -0.07862437, -0.078065877, -0.07750499, -0.076941707, -0.07637603, -0.075807956, -0.075237487, -0.074664621, -0.074089359, -0.073511699, -0.072931643, -0.072349189, -0.071764338, -0.07117709, -0.070587443, -0.069995399, -0.069400957, -0.068804116, -0.068204878, -0.067603241, -0.066999206, -0.066392773, -0.065783941, -0.065172711, -0.064559084, -0.063943058, -0.063324634, -0.062703812, -0.062080593, -0.061454976, -0.060826962, -0.06019655, -0.059563742, -0.058928537, -0.058290935, -0.057650938, -0.057008544, -0.056363755, -0.055716571, -0.055066992, -0.054415019, -0.053760651, -0.05310389, -0.052444736, -0.051783189, -0.051119251, -0.05045292, -0.049784198, -0.049113086, -0.048439584, -0.047763693, -0.047085412, -0.046404744, -0.045721688, -0.045036246, -0.044348417, -0.043658203, -0.042965605, -0.042270622, -0.041573257, -0.040873509, -0.04017138, -0.039466871, -0.038759981, -0.038050714, -0.037339068, -0.036625045, -0.035908646, -0.035189873, -0.034468725, -0.033745205, -0.033019312, -0.032291049, -0.031560416, -0.030827414, -0.030092045, -0.02935431, -0.028614209, -0.027871744, -0.027126917, -0.026379728, -0.025630179, -0.024878271, -0.024124005, -0.023367382, -0.022608405, -0.021847074, -0.021083391, -0.020317357, -0.019548973, -0.018778242, -0.018005164, -0.017229741, -0.016451975, -0.015671866, -0.014889417, -0.01410463, -0.013317505, -0.012528045, -0.011736251, -0.010942124, -0.010145667, -0.009346881, -0.008545768, -0.00774233, -0.006936568, -0.006128484, -0.00531808, -0.004505359, -0.003690321, -0.002872968, -0.002053303, -0.001231328, -0.000407044, 0.000419547, 0.001248442, 0.00207964, 0.002913138, 0.003748935, 0.004587029, 0.005427416, 0.006270096, 0.007115066, 0.007962324, 0.008811868, 0.009663695, 0.010517803, 0.01137419, 0.012232854, 0.013093792, 0.013957003, 0.014822483, 0.015690231, 0.016560243, 0.017432519, 0.018307054, 0.019183847, 0.020062896, 0.020944197, 0.021827748, 0.022713548, 0.023601592, 0.024491879, 0.025384406, 0.02627917, 0.027176169, 0.0280754, 0.02897686, 0.029880547, 0.030786458, 0.03169459, 0.03260494, 0.033517506, 0.034432285, 0.035349274, 0.03626847, 0.03718987, 0.038113471, 0.03903927, 0.039967265, 0.040897453, 0.041829829, 0.042764393, 0.043701139, 0.044640066, 0.045581171, 0.046524449, 0.047469899, 0.048417516, 0.049367298, 0.050319242, 0.051273344, 0.052229601, 0.05318801, 0.054148568, 0.05511127, 0.056076115, 0.057043099, 0.058012218, 0.058983469, 0.059956848, 0.060932352, 0.061909979, 0.062889723, 0.063871582, 0.064855552, 0.06584163, 0.066829812, 0.067820095, 0.068812474, 0.069806947, 0.07080351, 0.071802159, 0.07280289, 0.0738057, 0.074810585, 0.075817541, 0.076826564, 0.077837652, 0.078850799, 0.079866002, 0.080883257, 0.081902561, 0.08292391, 0.083947298, 0.084972724, 0.086000182, 0.087029669, 0.088061181, 0.089094713, 0.090130262, 0.091167824, 0.092207394, 0.093248968, 0.094292543, 0.095338115, 0.096385678, 0.097435229, 0.098486763, 0.099540277, 0.100595767, 0.101653227, 0.102712654, 0.103774043, 0.10483739, 0.105902691, 0.106969941, 0.108039136, 0.109110272, 0.110183343, 0.111258347, 0.112335277, 0.11341413, 0.114494901, 0.115577586, 0.11666218, 0.117748679, 0.118837077, 0.119927371, 0.121019555, 0.122113625, 0.123209577, 0.124307405, 0.125407105, 0.126508673, 0.127612103, 0.12871739, 0.129824531, 0.130933519, 0.132044351, 0.133157021, 0.134271525, 0.135387857, 0.136506013, 0.137625988, 0.138747777, 0.139871374, 0.140996775, 0.142123976, 0.143252969, 0.144383752, 0.145516318, 0.146650663, 0.147786782, 0.148924669, 0.150064319, 0.151205726, 0.152348887, 0.153493796, 0.154640447, 0.155788835, 0.156938954, 0.158090801, 0.159244369, 0.160399652, 0.161556647, 0.162715346, 0.163875746, 0.16503784, 0.166201623, 0.16736709, 0.168534234, 0.169703052, 0.170873536, 0.172045683, 0.173219485, 0.174394938, 0.175572036, 0.176750774, 0.177931145, 0.179113144, 0.180296766, 0.181482005, 0.182668855, 0.18385731, 0.185047365, 0.186239015, 0.187432252, 0.188627072, 0.189823468, 0.191021436, 0.192220968, 0.19342206, 0.194624705, 0.195828897, 0.197034631, 0.1982419, 0.199450699, 0.200661022, 0.201872863, 0.203086215, 0.204301073, 0.20551743, 0.206735281, 0.20795462, 0.20917544, 0.210397736, 0.211621501, 0.212846729, 0.214073413, 0.215301549, 0.216531129, 0.217762148, 0.218994598, 0.220228475, 0.221463771, 0.222700481, 0.223938598, 0.225178115, 0.226419027, 0.227661327, 0.228905009, 0.230150066, 0.231396492, 0.232644281, 0.233893425, 0.235143919, 0.236395757, 0.237648931, 0.238903435, 0.240159264, 0.241416409, 0.242674865, 0.243934624, 0.245195682, 0.24645803, 0.247721662, 0.248986572, 0.250252754, 0.251520199, 0.252788902, 0.254058856, 0.255330054, 0.256602489, 0.257876156, 0.259151046, 0.260427154, 0.261704472, 0.262982993, 0.264262712, 0.26554362, 0.266825711, 0.268108979, 0.269393416, 0.270679016, 0.271965771, 0.273253674, 0.274542719, 0.275832899, 0.277124207, 0.278416635, 0.279710177, 0.281004826, 0.282300574, 0.283597415, 0.284895342, 0.286194346, 0.287494423, 0.288795563, 0.290097761, 0.291401008, 0.292705298, 0.294010624, 0.295316979, 0.296624354, 0.297932744, 0.29924214, 0.300552536, 0.301863924, 0.303176297, 0.304489648, 0.30580397, 0.307119254, 0.308435495, 0.309752684, 0.311070813, 0.312389877, 0.313709867, 0.315030776, 0.316352596, 0.317675321, 0.318998942, 0.320323452, 0.321648844, 0.322975111, 0.324302244, 0.325630236, 0.326959081, 0.328288769, 0.329619294, 0.330950649, 0.332282824, 0.333615814, 0.33494961, 0.336284205, 0.337619591, 0.338955761, 0.340292707, 0.34163042, 0.342968895, 0.344308122, 0.345648094, 0.346988804, 0.348330243, 0.349672404, 0.35101528, 0.352358862, 0.353703143, 0.355048115, 0.35639377, 0.3577401, 0.359087098, 0.360434756, 0.361783065, 0.363132019, 0.364481608, 0.365831826, 0.367182665, 0.368534115, 0.369886171, 0.371238823, 0.372592064, 0.373945885, 0.37530028, 0.376655239, 0.378010755, 0.37936682, 0.380723426, 0.382080565, 0.383438229, 0.38479641, 0.3861551, 0.38751429, 0.388873973, 0.390234141, 0.391594786, 0.392955898, 0.394317472, 0.395679497, 0.397041967, 0.398404873, 0.399768207, 0.40113196, 0.402496125, 0.403860694, 0.405225657, 0.406591008, 0.407956738, 0.409322838, 0.410689301, 0.412056118, 0.413423281, 0.414790782, 0.416158612, 0.417526764, 0.418895228, 0.420263997, 0.421633063, 0.423002416, 0.42437205, 0.425741955, 0.427112123, 0.428482546, 0.429853216, 0.431224123, 0.432595261, 0.43396662, 0.435338192, 0.436709968, 0.438081941, 0.439454102, 0.440826442, 0.442198954, 0.443571628, 0.444944457, 0.446317431, 0.447690543, 0.449063783, 0.450437144, 0.451810617, 0.453184194, 0.454557866, 0.455931624, 0.457305461, 0.458679367, 0.460053334, 0.461427354, 0.462801418, 0.464175517, 0.465549644, 0.466923788, 0.468297943, 0.4696721, 0.471046249, 0.472420382, 0.473794491, 0.475168568, 0.476542603, 0.477916588, 0.479290514, 0.480664373, 0.482038156, 0.483411855, 0.484785461, 0.486158965, 0.487532359, 0.488905634, 0.490278781, 0.491651792, 0.493024659, 0.494397372, 0.495769922, 0.497142302, 0.498514503, 0.499886515, 0.501258331, 0.502629941, 0.504001337, 0.505372511, 0.506743452, 0.508114154, 0.509484606, 0.510854801, 0.51222473, 0.513594383, 0.514963753, 0.51633283, 0.517701606, 0.519070072, 0.52043822, 0.52180604, 0.523173524, 0.524540663, 0.525907448, 0.527273871, 0.528639923, 0.530005595, 0.531370878, 0.532735764, 0.534100244, 0.535464309, 0.53682795, 0.538191159, 0.539553927, 0.540916244, 0.542278103, 0.543639494, 0.545000409, 0.546360839, 0.547720775, 0.549080208, 0.550439129, 0.551797531, 0.553155403, 0.554512737, 0.555869525, 0.557225757, 0.558581425, 0.55993652, 0.561291033, 0.562644956, 0.563998279, 0.565350993, 0.566703091, 0.568054562, 0.569405399, 0.570755593, 0.572105134, 0.573454013, 0.574802223, 0.576149755, 0.577496598, 0.578842745, 0.580188187, 0.581532915, 0.58287692, 0.584220194, 0.585562727, 0.58690451, 0.588245536, 0.589585795, 0.590925278, 0.592263976, 0.593601882, 0.594938985, 0.596275277, 0.597610749, 0.598945393, 0.600279199, 0.601612159, 0.602944264, 0.604275506, 0.605605874, 0.606935362, 0.608263959, 0.609591657, 0.610918448, 0.612244321, 0.61356927, 0.614893284, 0.616216355, 0.617538475, 0.618859634, 0.620179823, 0.621499035, 0.622817259, 0.624134488, 0.625450713, 0.626765924, 0.628080113, 0.629393272, 0.630705391, 0.632016462, 0.633326476, 0.634635423, 0.635943297, 0.637250087, 0.638555785, 0.639860382, 0.64116387, 0.642466239, 0.643767482, 0.645067589, 0.646366551, 0.64766436, 0.648961007, 0.650256484, 0.651550781, 0.65284389, 0.654135803, 0.65542651, 0.656716003, 0.658004273, 0.659291312, 0.66057711, 0.66186166, 0.663144952, 0.664426978, 0.665707729, 0.666987196, 0.668265372, 0.669542246, 0.670817812, 0.672092059, 0.673364979, 0.674636564, 0.675906805, 0.677175693, 0.67844322, 0.679709378, 0.680974157, 0.682237549, 0.683499545, 0.684760137, 0.686019317, 0.687277075, 0.688533403, 0.689788293, 0.691041736, 0.692293724, 0.693544247, 0.694793298, 0.696040868, 0.697286948, 0.69853153, 0.699774605, 0.701016165, 0.702256202, 0.703494706, 0.70473167, 0.705967085, 0.707200942, 0.708433233, 0.70966395, 0.710893085, 0.712120627, 0.713346571, 0.714570906, 0.715793624, 0.717014718, 0.718234178, 0.719451997, 0.720668165, 0.721882675, 0.723095519, 0.724306687, 0.725516171, 0.726723964, 0.727930057, 0.729134442, 0.730337109, 0.731538052, 0.732737261, 0.733934728, 0.735130446, 0.736324406, 0.737516599, 0.738707017, 0.739895653, 0.741082497, 0.742267542, 0.74345078, 0.744632202, 0.7458118, 0.746989566, 0.748165492, 0.749339569, 0.75051179, 0.751682146, 0.752850629, 0.754017232, 0.755181945, 0.756344762, 0.757505673, 0.75866467, 0.759821747, 0.760976894, 0.762130104, 0.763281368, 0.764430679, 0.765578028, 0.766723408, 0.76786681, 0.769008227, 0.770147651, 0.771285073, 0.772420486, 0.773553881, 0.774685252, 0.775814589, 0.776941886, 0.778067134, 0.779190325, 0.780311451, 0.781430505, 0.782547479, 0.783662365, 0.784775155, 0.785885842, 0.786994417, 0.788100872, 0.789205201, 0.790307395, 0.791407447, 0.792505348, 0.793601092, 0.79469467, 0.795786075, 0.796875299, 0.797962334, 0.799047173, 0.800129808, 0.801210232, 0.802288437, 0.803364415, 0.804438159, 0.805509661, 0.806578913, 0.807645909, 0.80871064, 0.8097731, 0.81083328, 0.811891173, 0.812946772, 0.814000069, 0.815051057, 0.816099728, 0.817146075, 0.818190091, 0.819231768, 0.820271098, 0.821308075, 0.822342691, 0.823374939, 0.824404812, 0.825432301, 0.826457401, 0.827480103, 0.828500401, 0.829518286, 0.830533753, 0.831546794, 0.832557401, 0.833565567, 0.834571286, 0.83557455, 0.836575352, 0.837573684, 0.838569541, 0.839562914, 0.840553797, 0.841542183, 0.842528064, 0.843511434, 0.844492285, 0.845470611, 0.846446404, 0.847419659, 0.848390367, 0.849358522, 0.850324116, 0.851287144, 0.852247598, 0.853205472, 0.854160758, 0.85511345, 0.85606354, 0.857011023, 0.857955892, 0.858898138, 0.859837757, 0.860774741, 0.861709084, 0.862640778, 0.863569818, 0.864496196, 0.865419906, 0.866340941, 0.867259295, 0.868174961, 0.869087933, 0.869998204, 0.870905767, 0.871810617, 0.872712746, 0.873612148, 0.874508817, 0.875402746, 0.876293929, 0.877182359, 0.87806803, 0.878950937, 0.879831071, 0.880708428, 0.881583, 0.882454782, 0.883323767, 0.884189949, 0.885053322, 0.885913879, 0.886771615, 0.887626523, 0.888478597, 0.889327831, 0.890174219, 0.891017755, 0.891858432, 0.892696245, 0.893531188, 0.894363254, 0.895192438, 0.896018733, 0.896842134, 0.897662635, 0.89848023, 0.899294913, 0.900106677, 0.900915518, 0.90172143, 0.902524406, 0.903324441, 0.904121528, 0.904915664, 0.90570684, 0.906495053, 0.907280295, 0.908062562, 0.908841848, 0.909618147, 0.910391454, 0.911161763, 0.911929068, 0.912693364, 0.913454645, 0.914212907, 0.914968142, 0.915720347, 0.916469515, 0.917215641, 0.91795872, 0.918698746, 0.919435714, 0.920169618, 0.920900454, 0.921628215, 0.922352898, 0.923074496, 0.923793004, 0.924508417, 0.92522073, 0.925929938, 0.926636035, 0.927339016, 0.928038877, 0.928735612, 0.929429217, 0.930119685, 0.930807013, 0.931491194, 0.932172225, 0.932850101, 0.933524815, 0.934196364, 0.934864742, 0.935529945, 0.936191968, 0.936850806, 0.937506455, 0.938158908, 0.938808163, 0.939454213, 0.940097055, 0.940736684, 0.941373094, 0.942006282, 0.942636243, 0.943262971, 0.943886464, 0.944506715, 0.945123722, 0.945737478, 0.946347979, 0.946955222, 0.947559202, 0.948159914, 0.948757354, 0.949351518, 0.9499424, 0.950529998, 0.951114307, 0.951695322, 0.952273039, 0.952847454, 0.953418563, 0.953986362, 0.954550846, 0.955112011, 0.955669854, 0.95622437, 0.956775555, 0.957323405, 0.957867917, 0.958409085, 0.958946907, 0.959481378, 0.960012495, 0.960540253, 0.961064648, 0.961585678, 0.962103337, 0.962617623, 0.963128531, 0.963636058, 0.9641402, 0.964640954, 0.965138315, 0.96563228, 0.966122845, 0.966610008, 0.967093764, 0.967574109, 0.968051041, 0.968524555, 0.968994649, 0.969461319, 0.969924561, 0.970384372, 0.970840749, 0.971293688, 0.971743186, 0.97218924, 0.972631846, 0.973071002, 0.973506704, 0.973938948, 0.974367732, 0.974793053, 0.975214907, 0.975633291, 0.976048203, 0.976459639, 0.976867596, 0.977272071, 0.977673062, 0.978070565, 0.978464577, 0.978855095, 0.979242118, 0.979625641, 0.980005662, 0.980382178, 0.980755187, 0.981124686, 0.981490671, 0.981853141, 0.982212092, 0.982567523, 0.98291943, 0.98326781, 0.983612662, 0.983953983, 0.98429177, 0.984626021, 0.984956733, 0.985283904, 0.985607531, 0.985927613, 0.986244146, 0.986557129, 0.986866558, 0.987172433, 0.98747475, 0.987773508, 0.988068704, 0.988360336, 0.988648402, 0.988932899, 0.989213827, 0.989491182, 0.989764962, 0.990035166, 0.990301792, 0.990564837, 0.9908243, 0.991080179, 0.991332471, 0.991581176, 0.991826291, 0.992067814, 0.992305744, 0.992540079, 0.992770817, 0.992997957, 0.993221496, 0.993441434, 0.993657768, 0.993870497, 0.994079619, 0.994285134, 0.994487038, 0.994685332, 0.994880013, 0.99507108, 0.995258531, 0.995442366, 0.995622582, 0.995799179, 0.995972155, 0.996141509, 0.99630724, 0.996469347, 0.996627827, 0.996782681, 0.996933907, 0.997081503, 0.997225469, 0.997365804, 0.997502507, 0.997635577, 0.997765012, 0.997890812, 0.998012975, 0.998131502, 0.998246391, 0.99835764, 0.998465251, 0.99856922, 0.998669549, 0.998766236, 0.99885928, 0.998948681, 0.999034438, 0.99911655, 0.999195017, 0.999269838, 0.999341013, 0.999408542, 0.999472422, 0.999532655, 0.99958924, 0.999642176, 0.999691463, 0.999737101, 0.999779088, 0.999817426, 0.999852113, 0.99988315, 0.999910536, 0.999934271, 0.999954354, 0.999970787, 0.999983567, 0.999992697, 0.999998174, 1, 0.999998174, 0.999992697, 0.999983567, 0.999970787, 0.999954354, 0.999934271, 0.999910536, 0.99988315, 0.999852113, 0.999817426, 0.999779088, 0.999737101, 0.999691463, 0.999642176, 0.99958924, 0.999532655, 0.999472422, 0.999408542, 0.999341013, 0.999269838, 0.999195017, 0.99911655, 0.999034438, 0.998948681, 0.99885928, 0.998766236, 0.998669549, 0.99856922, 0.998465251, 0.99835764, 0.998246391, 0.998131502, 0.998012975, 0.997890812, 0.997765012, 0.997635577, 0.997502507, 0.997365804, 0.997225469, 0.997081503, 0.996933907, 0.996782681, 0.996627827, 0.996469347, 0.99630724, 0.996141509, 0.995972155, 0.995799179, 0.995622582, 0.995442366, 0.995258531, 0.99507108, 0.994880013, 0.994685332, 0.994487038, 0.994285134, 0.994079619, 0.993870497, 0.993657768, 0.993441434, 0.993221496, 0.992997957, 0.992770817, 0.992540079, 0.992305744, 0.992067814, 0.991826291, 0.991581176, 0.991332471, 0.991080179, 0.9908243, 0.990564837, 0.990301792, 0.990035166, 0.989764962, 0.989491182, 0.989213827, 0.988932899, 0.988648402, 0.988360336, 0.988068704, 0.987773508, 0.98747475, 0.987172433, 0.986866558, 0.986557129, 0.986244146, 0.985927613, 0.985607531, 0.985283904, 0.984956733, 0.984626021, 0.98429177, 0.983953983, 0.983612662, 0.98326781, 0.98291943, 0.982567523, 0.982212092, 0.981853141, 0.981490671, 0.981124686, 0.980755187, 0.980382178, 0.980005662, 0.979625641, 0.979242118, 0.978855095, 0.978464577, 0.978070565, 0.977673062, 0.977272071, 0.976867596, 0.976459639, 0.976048203, 0.975633291, 0.975214907, 0.974793053, 0.974367732, 0.973938948, 0.973506704, 0.973071002, 0.972631846, 0.97218924, 0.971743186, 0.971293688, 0.970840749, 0.970384372, 0.969924561, 0.969461319, 0.968994649, 0.968524555, 0.968051041, 0.967574109, 0.967093764, 0.966610008, 0.966122845, 0.96563228, 0.965138315, 0.964640954, 0.9641402, 0.963636058, 0.963128531, 0.962617623, 0.962103337, 0.961585678, 0.961064648, 0.960540253, 0.960012495, 0.959481378, 0.958946907, 0.958409085, 0.957867917, 0.957323405, 0.956775555, 0.95622437, 0.955669854, 0.955112011, 0.954550846, 0.953986362, 0.953418563, 0.952847454, 0.952273039, 0.951695322, 0.951114307, 0.950529998, 0.9499424, 0.949351518, 0.948757354, 0.948159914, 0.947559202, 0.946955222, 0.946347979, 0.945737478, 0.945123722, 0.944506715, 0.943886464, 0.943262971, 0.942636243, 0.942006282, 0.941373094, 0.940736684, 0.940097055, 0.939454213, 0.938808163, 0.938158908, 0.937506455, 0.936850806, 0.936191968, 0.935529945, 0.934864742, 0.934196364, 0.933524815, 0.932850101, 0.932172225, 0.931491194, 0.930807013, 0.930119685, 0.929429217, 0.928735612, 0.928038877, 0.927339016, 0.926636035, 0.925929938, 0.92522073, 0.924508417, 0.923793004, 0.923074496, 0.922352898, 0.921628215, 0.920900454, 0.920169618, 0.919435714, 0.918698746, 0.91795872, 0.917215641, 0.916469515, 0.915720347, 0.914968142, 0.914212907, 0.913454645, 0.912693364, 0.911929068, 0.911161763, 0.910391454, 0.909618147, 0.908841848, 0.908062562, 0.907280295, 0.906495053, 0.90570684, 0.904915664, 0.904121528, 0.903324441, 0.902524406, 0.90172143, 0.900915518, 0.900106677, 0.899294913, 0.89848023, 0.897662635, 0.896842134, 0.896018733, 0.895192438, 0.894363254, 0.893531188, 0.892696245, 0.891858432, 0.891017755, 0.890174219, 0.889327831, 0.888478597, 0.887626523, 0.886771615, 0.885913879, 0.885053322, 0.884189949, 0.883323767, 0.882454782, 0.881583, 0.880708428, 0.879831071, 0.878950937, 0.87806803, 0.877182359, 0.876293929, 0.875402746, 0.874508817, 0.873612148, 0.872712746, 0.871810617, 0.870905767, 0.869998204, 0.869087933, 0.868174961, 0.867259295, 0.866340941, 0.865419906, 0.864496196, 0.863569818, 0.862640778, 0.861709084, 0.860774741, 0.859837757, 0.858898138, 0.857955892, 0.857011023, 0.85606354, 0.85511345, 0.854160758, 0.853205472, 0.852247598, 0.851287144, 0.850324116, 0.849358522, 0.848390367, 0.847419659, 0.846446404, 0.845470611, 0.844492285, 0.843511434, 0.842528064, 0.841542183, 0.840553797, 0.839562914, 0.838569541, 0.837573684, 0.836575352, 0.83557455, 0.834571286, 0.833565567, 0.832557401, 0.831546794, 0.830533753, 0.829518286, 0.828500401, 0.827480103, 0.826457401, 0.825432301, 0.824404812, 0.823374939, 0.822342691, 0.821308075, 0.820271098, 0.819231768, 0.818190091, 0.817146075, 0.816099728, 0.815051057, 0.814000069, 0.812946772, 0.811891173, 0.81083328, 0.8097731, 0.80871064, 0.807645909, 0.806578913, 0.805509661, 0.804438159, 0.803364415, 0.802288437, 0.801210232, 0.800129808, 0.799047173, 0.797962334, 0.796875299, 0.795786075, 0.79469467, 0.793601092, 0.792505348, 0.791407447, 0.790307395, 0.789205201, 0.788100872, 0.786994417, 0.785885842, 0.784775155, 0.783662365, 0.782547479, 0.781430505, 0.780311451, 0.779190325, 0.778067134, 0.776941886, 0.775814589, 0.774685252, 0.773553881, 0.772420486, 0.771285073, 0.770147651, 0.769008227, 0.76786681, 0.766723408, 0.765578028, 0.764430679, 0.763281368, 0.762130104, 0.760976894, 0.759821747, 0.75866467, 0.757505673, 0.756344762, 0.755181945, 0.754017232, 0.752850629, 0.751682146, 0.75051179, 0.749339569, 0.748165492, 0.746989566, 0.7458118, 0.744632202, 0.74345078, 0.742267542, 0.741082497, 0.739895653, 0.738707017, 0.737516599, 0.736324406, 0.735130446, 0.733934728, 0.732737261, 0.731538052, 0.730337109, 0.729134442, 0.727930057, 0.726723964, 0.725516171, 0.724306687, 0.723095519, 0.721882675, 0.720668165, 0.719451997, 0.718234178, 0.717014718, 0.715793624, 0.714570906, 0.713346571, 0.712120627, 0.710893085, 0.70966395, 0.708433233, 0.707200942, 0.705967085, 0.70473167, 0.703494706, 0.702256202, 0.701016165, 0.699774605, 0.69853153, 0.697286948, 0.696040868, 0.694793298, 0.693544247, 0.692293724, 0.691041736, 0.689788293, 0.688533403, 0.687277075, 0.686019317, 0.684760137, 0.683499545, 0.682237549, 0.680974157, 0.679709378, 0.67844322, 0.677175693, 0.675906805, 0.674636564, 0.673364979, 0.672092059, 0.670817812, 0.669542246, 0.668265372, 0.666987196, 0.665707729, 0.664426978, 0.663144952, 0.66186166, 0.66057711, 0.659291312, 0.658004273, 0.656716003, 0.65542651, 0.654135803, 0.65284389, 0.651550781, 0.650256484, 0.648961007, 0.64766436, 0.646366551, 0.645067589, 0.643767482, 0.642466239, 0.64116387, 0.639860382, 0.638555785, 0.637250087, 0.635943297, 0.634635423, 0.633326476, 0.632016462, 0.630705391, 0.629393272, 0.628080113, 0.626765924, 0.625450713, 0.624134488, 0.622817259, 0.621499035, 0.620179823, 0.618859634, 0.617538475, 0.616216355, 0.614893284, 0.61356927, 0.612244321, 0.610918448, 0.609591657, 0.608263959, 0.606935362, 0.605605874, 0.604275506, 0.602944264, 0.601612159, 0.600279199, 0.598945393, 0.597610749, 0.596275277, 0.594938985, 0.593601882, 0.592263976, 0.590925278, 0.589585795, 0.588245536, 0.58690451, 0.585562727, 0.584220194, 0.58287692, 0.581532915, 0.580188187, 0.578842745, 0.577496598, 0.576149755, 0.574802223, 0.573454013, 0.572105134, 0.570755593, 0.569405399, 0.568054562, 0.566703091, 0.565350993, 0.563998279, 0.562644956, 0.561291033, 0.55993652, 0.558581425, 0.557225757, 0.555869525, 0.554512737, 0.553155403, 0.551797531, 0.550439129, 0.549080208, 0.547720775, 0.546360839, 0.545000409, 0.543639494, 0.542278103, 0.540916244, 0.539553927, 0.538191159, 0.53682795, 0.535464309, 0.534100244, 0.532735764, 0.531370878, 0.530005595, 0.528639923, 0.527273871, 0.525907448, 0.524540663, 0.523173524, 0.52180604, 0.52043822, 0.519070072, 0.517701606, 0.51633283, 0.514963753, 0.513594383, 0.51222473, 0.510854801, 0.509484606, 0.508114154, 0.506743452, 0.505372511, 0.504001337, 0.502629941, 0.501258331, 0.499886515, 0.498514503, 0.497142302, 0.495769922, 0.494397372, 0.493024659, 0.491651792, 0.490278781, 0.488905634, 0.487532359, 0.486158965, 0.484785461, 0.483411855, 0.482038156, 0.480664373, 0.479290514, 0.477916588, 0.476542603, 0.475168568, 0.473794491, 0.472420382, 0.471046249, 0.4696721, 0.468297943, 0.466923788, 0.465549644, 0.464175517, 0.462801418, 0.461427354, 0.460053334, 0.458679367, 0.457305461, 0.455931624, 0.454557866, 0.453184194, 0.451810617, 0.450437144, 0.449063783, 0.447690543, 0.446317431, 0.444944457, 0.443571628, 0.442198954, 0.440826442, 0.439454102, 0.438081941, 0.436709968, 0.435338192, 0.43396662, 0.432595261, 0.431224123, 0.429853216, 0.428482546, 0.427112123, 0.425741955, 0.42437205, 0.423002416, 0.421633063, 0.420263997, 0.418895228, 0.417526764, 0.416158612, 0.414790782, 0.413423281, 0.412056118, 0.410689301, 0.409322838, 0.407956738, 0.406591008, 0.405225657, 0.403860694, 0.402496125, 0.40113196, 0.399768207, 0.398404873, 0.397041967, 0.395679497, 0.394317472, 0.392955898, 0.391594786, 0.390234141, 0.388873973, 0.38751429, 0.3861551, 0.38479641, 0.383438229, 0.382080565, 0.380723426, 0.37936682, 0.378010755, 0.376655239, 0.37530028, 0.373945885, 0.372592064, 0.371238823, 0.369886171, 0.368534115, 0.367182665, 0.365831826, 0.364481608, 0.363132019, 0.361783065, 0.360434756, 0.359087098, 0.3577401, 0.35639377, 0.355048115, 0.353703143, 0.352358862, 0.35101528, 0.349672404, 0.348330243, 0.346988804, 0.345648094, 0.344308122, 0.342968895, 0.34163042, 0.340292707, 0.338955761, 0.337619591, 0.336284205, 0.33494961, 0.333615814, 0.332282824, 0.330950649, 0.329619294, 0.328288769, 0.326959081, 0.325630236, 0.324302244, 0.322975111, 0.321648844, 0.320323452, 0.318998942, 0.317675321, 0.316352596, 0.315030776, 0.313709867, 0.312389877, 0.311070813, 0.309752684, 0.308435495, 0.307119254, 0.30580397, 0.304489648, 0.303176297, 0.301863924, 0.300552536, 0.29924214, 0.297932744, 0.296624354, 0.295316979, 0.294010624, 0.292705298, 0.291401008, 0.290097761, 0.288795563, 0.287494423, 0.286194346, 0.284895342, 0.283597415, 0.282300574, 0.281004826, 0.279710177, 0.278416635, 0.277124207, 0.275832899, 0.274542719, 0.273253674, 0.271965771, 0.270679016, 0.269393416, 0.268108979, 0.266825711, 0.26554362, 0.264262712, 0.262982993, 0.261704472, 0.260427154, 0.259151046, 0.257876156, 0.256602489, 0.255330054, 0.254058856, 0.252788902, 0.251520199, 0.250252754, 0.248986572, 0.247721662, 0.24645803, 0.245195682, 0.243934624, 0.242674865, 0.241416409, 0.240159264, 0.238903435, 0.237648931, 0.236395757, 0.235143919, 0.233893425, 0.232644281, 0.231396492, 0.230150066, 0.228905009, 0.227661327, 0.226419027, 0.225178115, 0.223938598, 0.222700481, 0.221463771, 0.220228475, 0.218994598, 0.217762148, 0.216531129, 0.215301549, 0.214073413, 0.212846729, 0.211621501, 0.210397736, 0.20917544, 0.20795462, 0.206735281, 0.20551743, 0.204301073, 0.203086215, 0.201872863, 0.200661022, 0.199450699, 0.1982419, 0.197034631, 0.195828897, 0.194624705, 0.19342206, 0.192220968, 0.191021436, 0.189823468, 0.188627072, 0.187432252, 0.186239015, 0.185047365, 0.18385731, 0.182668855, 0.181482005, 0.180296766, 0.179113144, 0.177931145, 0.176750774, 0.175572036, 0.174394938, 0.173219485, 0.172045683, 0.170873536, 0.169703052, 0.168534234, 0.16736709, 0.166201623, 0.16503784, 0.163875746, 0.162715346, 0.161556647, 0.160399652, 0.159244369, 0.158090801, 0.156938954, 0.155788835, 0.154640447, 0.153493796, 0.152348887, 0.151205726, 0.150064319, 0.148924669, 0.147786782, 0.146650663, 0.145516318, 0.144383752, 0.143252969, 0.142123976, 0.140996775, 0.139871374, 0.138747777, 0.137625988, 0.136506013, 0.135387857, 0.134271525, 0.133157021, 0.132044351, 0.130933519, 0.129824531, 0.12871739, 0.127612103, 0.126508673, 0.125407105, 0.124307405, 0.123209577, 0.122113625, 0.121019555, 0.119927371, 0.118837077, 0.117748679, 0.11666218, 0.115577586, 0.114494901, 0.11341413, 0.112335277, 0.111258347, 0.110183343, 0.109110272, 0.108039136, 0.106969941, 0.105902691, 0.10483739, 0.103774043, 0.102712654, 0.101653227, 0.100595767, 0.099540277, 0.098486763, 0.097435229, 0.096385678, 0.095338115, 0.094292543, 0.093248968, 0.092207394, 0.091167824, 0.090130262, 0.089094713, 0.088061181, 0.087029669, 0.086000182, 0.084972724, 0.083947298, 0.08292391, 0.081902561, 0.080883257, 0.079866002, 0.078850799, 0.077837652, 0.076826564, 0.075817541, 0.074810585, 0.0738057, 0.07280289, 0.071802159, 0.07080351, 0.069806947, 0.068812474, 0.067820095, 0.066829812, 0.06584163, 0.064855552, 0.063871582, 0.062889723, 0.061909979, 0.060932352, 0.059956848, 0.058983469, 0.058012218, 0.057043099, 0.056076115, 0.05511127, 0.054148568, 0.05318801, 0.052229601, 0.051273344, 0.050319242, 0.049367298, 0.048417516, 0.047469899, 0.046524449, 0.045581171, 0.044640066, 0.043701139, 0.042764393, 0.041829829, 0.040897453, 0.039967265, 0.03903927, 0.038113471, 0.03718987, 0.03626847, 0.035349274, 0.034432285, 0.033517506, 0.03260494, 0.03169459, 0.030786458, 0.029880547, 0.02897686, 0.0280754, 0.027176169, 0.02627917, 0.025384406, 0.024491879, 0.023601592, 0.022713548, 0.021827748, 0.020944197, 0.020062896, 0.019183847, 0.018307054, 0.017432519, 0.016560243, 0.015690231, 0.014822483, 0.013957003, 0.013093792, 0.012232854, 0.01137419, 0.010517803, 0.009663695, 0.008811868, 0.007962324, 0.007115066, 0.006270096, 0.005427416, 0.004587029, 0.003748935, 0.002913138, 0.00207964, 0.001248442, 0.000419547, -0.000407044, -0.001231328, -0.002053303, -0.002872968, -0.003690321, -0.004505359, -0.00531808, -0.006128484, -0.006936568, -0.00774233, -0.008545768, -0.009346881, -0.010145667, -0.010942124, -0.011736251, -0.012528045, -0.013317505, -0.01410463, -0.014889417, -0.015671866, -0.016451975, -0.017229741, -0.018005164, -0.018778242, -0.019548973, -0.020317357, -0.021083391, -0.021847074, -0.022608405, -0.023367382, -0.024124005, -0.024878271, -0.025630179, -0.026379728, -0.027126917, -0.027871744, -0.028614209, -0.02935431, -0.030092045, -0.030827414, -0.031560416, -0.032291049, -0.033019312, -0.033745205, -0.034468725, -0.035189873, -0.035908646, -0.036625045, -0.037339068, -0.038050714, -0.038759981, -0.039466871, -0.04017138, -0.040873509, -0.041573257, -0.042270622, -0.042965605, -0.043658203, -0.044348417, -0.045036246, -0.045721688, -0.046404744, -0.047085412, -0.047763693, -0.048439584, -0.049113086, -0.049784198, -0.05045292, -0.051119251, -0.051783189, -0.052444736, -0.05310389, -0.053760651, -0.054415019, -0.055066992, -0.055716571, -0.056363755, -0.057008544, -0.057650938, -0.058290935, -0.058928537, -0.059563742, -0.06019655, -0.060826962, -0.061454976, -0.062080593, -0.062703812, -0.063324634, -0.063943058, -0.064559084, -0.065172711, -0.065783941, -0.066392773, -0.066999206, -0.067603241, -0.068204878, -0.068804116, -0.069400957, -0.069995399, -0.070587443, -0.07117709, -0.071764338, -0.072349189, -0.072931643, -0.073511699, -0.074089359, -0.074664621, -0.075237487, -0.075807956, -0.07637603, -0.076941707, -0.07750499, -0.078065877, -0.07862437, -0.079180468, -0.079734173, -0.080285484, -0.080834402, -0.081380928, -0.081925062, -0.082466804, -0.083006155, -0.083543116, -0.084077687, -0.084609868, -0.085139661, -0.085667066, -0.086192084, -0.086714715, -0.08723496, -0.087752819, -0.088268294, -0.088781386, -0.089292094, -0.08980042, -0.090306364, -0.090809928, -0.091311112, -0.091809917, -0.092306344, -0.092800394, -0.093292068, -0.093781367, -0.094268291, -0.094752842, -0.09523502, -0.095714827, -0.096192264, -0.096667332, -0.097140032, -0.097610364, -0.098078331, -0.098543933, -0.099007171, -0.099468047, -0.099926561, -0.100382716, -0.100836512, -0.10128795, -0.101737031, -0.102183758, -0.102628131, -0.103070152, -0.103509821, -0.103947141, -0.104382112, -0.104814737, -0.105245016, -0.105672951, -0.106098543, -0.106521795, -0.106942706, -0.10736128, -0.107777516, -0.108191418, -0.108602986, -0.109012222, -0.109419128, -0.109823705, -0.110225955, -0.11062588, -0.11102348, -0.111418759, -0.111811717, -0.112202357, -0.11259068, -0.112976687, -0.113360381, -0.113741764, -0.114120837, -0.114497602, -0.114872061, -0.115244215, -0.115614068, -0.115981619, -0.116346873, -0.116709829, -0.117070491, -0.117428861, -0.11778494, -0.11813873, -0.118490233, -0.118839452, -0.119186388, -0.119531044, -0.119873422, -0.120213523, -0.12055135, -0.120886905, -0.12122019, -0.121551208, -0.12187996, -0.122206449, -0.122530676, -0.122852645, -0.123172358, -0.123489816, -0.123805022, -0.124117979, -0.124428688, -0.124737152, -0.125043374, -0.125347355, -0.125649098, -0.125948606, -0.126245881, -0.126540926, -0.126833742, -0.127124333, -0.1274127, -0.127698847, -0.127982775, -0.128264488, -0.128543988, -0.128821278, -0.129096359, -0.129369235, -0.129639909, -0.129908382, -0.130174659, -0.13043874, -0.130700629, -0.130960329, -0.131217842, -0.131473171, -0.131726319, -0.131977289, -0.132226083, -0.132472704, -0.132717155, -0.132959439, -0.133199558, -0.133437515, -0.133673314, -0.133906957, -0.134138447, -0.134367787, -0.13459498, -0.134820028, -0.135042936, -0.135263705, -0.135482339, -0.13569884, -0.135913212, -0.136125458, -0.13633558, -0.136543583, -0.136749468, -0.136953239, -0.137154899, -0.137354451, -0.137551899, -0.137747245, -0.137940492, -0.138131645, -0.138320705, -0.138507676, -0.138692561, -0.138875364, -0.139056088, -0.139234736, -0.139411311, -0.139585817, -0.139758256, -0.139928632, -0.140096949, -0.14026321, -0.140427418, -0.140589576, -0.140749688, -0.140907758, -0.141063788, -0.141217782, -0.141369743, -0.141519676, -0.141667582, -0.141813467, -0.141957332, -0.142099183, -0.142239021, -0.142376852, -0.142512677, -0.142646502, -0.142778329, -0.142908162, -0.143036004, -0.143161859, -0.143285731, -0.143407624, -0.14352754, -0.143645484, -0.143761459, -0.143875469, -0.143987517, -0.144097608, -0.144205744, -0.14431193, -0.14441617, -0.144518466, -0.144618823, -0.144717245, -0.144813736, -0.144908298, -0.145000936, -0.145091654, -0.145180455, -0.145267344, -0.145352324, -0.145435399, -0.145516573, -0.145595849, -0.145673232, -0.145748726, -0.145822334, -0.14589406, -0.145963909, -0.146031884, -0.146097989, -0.146162227, -0.146224604, -0.146285123, -0.146343788, -0.146400603, -0.146455572, -0.146508699, -0.146559988, -0.146609444, -0.146657069, -0.146702868, -0.146746846, -0.146789006, -0.146829353, -0.14686789, -0.146904621, -0.146939552, -0.146972685, -0.147004025, -0.147033577, -0.147061344, -0.14708733, -0.14711154, -0.147133978, -0.147154648, -0.147173554, -0.147190701, -0.147206092, -0.147219733, -0.147231626, -0.147241777, -0.14725019, -0.147256868, -0.147261817, -0.14726504, -0.147266542, -0.147266328, -0.1472644, -0.147260765, -0.147255425, -0.147248386, -0.147239652, -0.147229226, -0.147217115, -0.147203321, -0.147187849, -0.147170704, -0.14715189, -0.147131412, -0.147109273, -0.147085478, -0.147060032, -0.14703294, -0.147004205, -0.146973832, -0.146941825, -0.146908189, -0.146872929, -0.146836048, -0.146797552, -0.146757445, -0.146715732, -0.146672416, -0.146627502, -0.146580996, -0.146532901, -0.146483222, -0.146431963, -0.14637913, -0.146324726, -0.146268757, -0.146211226, -0.146152139, -0.1460915, -0.146029313, -0.145965584, -0.145900316, -0.145833515, -0.145765185, -0.14569533, -0.145623956, -0.145551066, -0.145476667, -0.145400761, -0.145323354, -0.145244451, -0.145164056, -0.145082174, -0.14499881, -0.144913967, -0.144827652, -0.144739868, -0.144650621, -0.144559915, -0.144467754, -0.144374144, -0.144279089, -0.144182594, -0.144084664, -0.143985303, -0.143884517, -0.143782309, -0.143678685, -0.143573649, -0.143467207, -0.143359362, -0.143250121, -0.143139487, -0.143027465, -0.14291406, -0.142799277, -0.142683121, -0.142565597, -0.142446708, -0.142326461, -0.14220486, -0.142081909, -0.141957614, -0.14183198, -0.141705011, -0.141576711, -0.141447087, -0.141316143, -0.141183883, -0.141050312, -0.140915436, -0.14077926, -0.140641787, -0.140503023, -0.140362973, -0.140221641, -0.140079033, -0.139935154, -0.139790008, -0.1396436, -0.139495935, -0.139347018, -0.139196854, -0.139045448, -0.138892804, -0.138738928, -0.138583825, -0.138427499, -0.138269955, -0.138111199, -0.137951234, -0.137790067, -0.137627702, -0.137464143, -0.137299397, -0.137133467, -0.136966359, -0.136798078, -0.136628628, -0.136458015, -0.136286243, -0.136113318, -0.135939244, -0.135764027, -0.135587671, -0.135410181, -0.135231562, -0.135051819, -0.134870957, -0.134688982, -0.134505897, -0.134321709, -0.134136421, -0.133950039, -0.133762568, -0.133574013, -0.133384379, -0.133193671, -0.133001893, -0.132809051, -0.13261515, -0.132420194, -0.132224189, -0.13202714, -0.131829051, -0.131629928, -0.131429775, -0.131228598, -0.131026401, -0.13082319, -0.130618969, -0.130413744, -0.130207519, -0.130000299, -0.12979209, -0.129582897, -0.129372723, -0.129161575, -0.128949457, -0.128736375, -0.128522333, -0.128307336, -0.128091389, -0.127874497, -0.127656666, -0.1274379, -0.127218204, -0.126997583, -0.126776042, -0.126553586, -0.12633022, -0.12610595, -0.125880779, -0.125654713, -0.125427758, -0.125199917, -0.124971196, -0.1247416, -0.124511134, -0.124279802, -0.124047611, -0.123814564, -0.123580667, -0.123345924, -0.123110342, -0.122873923, -0.122636675, -0.122398601, -0.122159706, -0.121919996, -0.121679475, -0.121438149, -0.121196022, -0.120953099, -0.120709385, -0.120464885, -0.120219605, -0.119973548, -0.119726721, -0.119479127, -0.119230772, -0.118981661, -0.118731799, -0.11848119, -0.11822984, -0.117977753, -0.117724935, -0.11747139, -0.117217123, -0.116962139, -0.116706444, -0.116450041, -0.116192936, -0.115935134, -0.11567664, -0.115417458, -0.115157593, -0.114897051, -0.114635836, -0.114373954, -0.114111408, -0.113848204, -0.113584347, -0.113319842, -0.113054693, -0.112788905, -0.112522483, -0.112255433, -0.111987759, -0.111719465, -0.111450557, -0.111181039, -0.110910917, -0.110640195, -0.110368878, -0.110096971, -0.109824478, -0.109551405, -0.109277756, -0.109003536, -0.10872875, -0.108453402, -0.108177499, -0.107901043, -0.107624041, -0.107346496, -0.107068414, -0.1067898, -0.106510657, -0.106230992, -0.105950809, -0.105670112, -0.105388906, -0.105107196, -0.104824987, -0.104542284, -0.10425909, -0.103975412, -0.103691253, -0.103406619, -0.103121514, -0.102835943, -0.10254991, -0.102263421, -0.10197648, -0.101689091, -0.10140126, -0.10111299, -0.100824287, -0.100535156, -0.100245601, -0.099955626, -0.099665237, -0.099374438, -0.099083233, -0.098791628, -0.098499627, -0.098207234, -0.097914454, -0.097621292, -0.097327753, -0.09703384, -0.096739559, -0.096444914, -0.09614991, -0.095854552, -0.095558843, -0.095262789, -0.094966394, -0.094669662, -0.094372598, -0.094075208, -0.093777494, -0.093479462, -0.093181117, -0.092882462, -0.092583503, -0.092284243, -0.091984688, -0.091684841, -0.091384708, -0.091084293, -0.090783599, -0.090482633, -0.090181397, -0.089879898, -0.089578138, -0.089276123, -0.088973856, -0.088671343, -0.088368588, -0.088065595, -0.087762368, -0.087458913, -0.087155233, -0.086851332, -0.086547216, -0.086242888, -0.085938353, -0.085633615, -0.085328678, -0.085023548, -0.084718227, -0.084412721, -0.084107034, -0.08380117, -0.083495133, -0.083188928, -0.08288256, -0.082576031, -0.082269347, -0.081962511, -0.081655529, -0.081348404, -0.081041141, -0.080733743, -0.080426215, -0.080118562, -0.079810786, -0.079502894, -0.079194888, -0.078886773, -0.078578553, -0.078270233, -0.077961816, -0.077653306, -0.077344708, -0.077036026, -0.076727264, -0.076418427, -0.076109517, -0.07580054, -0.075491499, -0.075182398, -0.074873242, -0.074564035, -0.07425478, -0.073945482, -0.073636145, -0.073326772, -0.073017368, -0.072707937, -0.072398483, -0.072089009, -0.071779521, -0.071470021, -0.071160513, -0.070851003, -0.070541493, -0.070231987, -0.06992249, -0.069613006, -0.069303538, -0.06899409, -0.068684666, -0.06837527, -0.068065906, -0.067756577, -0.067447288, -0.067138043, -0.066828845, -0.066519698, -0.066210606, -0.065901573, -0.065592602, -0.065283697, -0.064974863, -0.064666102, -0.064357419, -0.064048818, -0.063740301, -0.063431874, -0.063123539, -0.0628153, -0.062507162, -0.062199127, -0.061891199, -0.061583383, -0.061275681, -0.060968097, -0.060660636, -0.0603533, -0.060046094, -0.05973902, -0.059432083, -0.059125286, -0.058818633, -0.058512127, -0.058205772, -0.057899571, -0.057593528, -0.057287647, -0.05698193, -0.056676382, -0.056371006, -0.056065806, -0.055760784, -0.055455945, -0.055151292, -0.054846829, -0.054542558, -0.054238483, -0.053934608, -0.053630936, -0.053327471, -0.053024215, -0.052721173, -0.052418347, -0.052115741, -0.051813359, -0.051511203, -0.051209278, -0.050907585, -0.05060613, -0.050304914, -0.050003941, -0.049703215, -0.049402738, -0.049102515, -0.048802548, -0.04850284, -0.048203395, -0.047904216, -0.047605306, -0.047306668, -0.047008306, -0.046710222, -0.04641242, -0.046114903, -0.045817674, -0.045520736, -0.045224093, -0.044927747, -0.044631701, -0.044335959, -0.044040524, -0.043745398, -0.043450585, -0.043156088, -0.04286191, -0.042568053, -0.042274521, -0.041981318, -0.041688444, -0.041395905, -0.041103702, -0.040811839, -0.040520319, -0.040229144, -0.039938317, -0.039647842, -0.039357721, -0.039067957, -0.038778553, -0.038489512, -0.038200836, -0.037912529, -0.037624594, -0.037337032, -0.037049847, -0.036763042, -0.03647662, -0.036190583, -0.035904933, -0.035619675, -0.03533481, -0.035050341, -0.034766271, -0.034482603, -0.034199339, -0.033916482, -0.033634034, -0.033351999, -0.033070379, -0.032789176, -0.032508393, -0.032228033, -0.031948099, -0.031668592, -0.031389516, -0.031110873, -0.030832665, -0.030554896, -0.030277567, -0.030000682, -0.029724242, -0.02944825, -0.029172709, -0.028897621, -0.028622988, -0.028348814, -0.0280751, -0.027801848, -0.027529062, -0.027256744, -0.026984895, -0.026713519, -0.026442618, -0.026172194, -0.025902249, -0.025632786, -0.025363807, -0.025095314, -0.02482731, -0.024559797, -0.024292777, -0.024026252, -0.023760225, -0.023494699, -0.023229674, -0.022965153, -0.022701139, -0.022437634, -0.022174639, -0.021912158, -0.021650192, -0.021388743, -0.021127813, -0.020867405, -0.020607521, -0.020348162, -0.020089332, -0.019831031, -0.019573262, -0.019316026, -0.019059327, -0.018803166, -0.018547545, -0.018292466, -0.018037931, -0.017783942, -0.0175305, -0.017277609, -0.017025269, -0.016773483, -0.016522252, -0.016271579, -0.016021466, -0.015771913, -0.015522924, -0.0152745, -0.015026642, -0.014779353, -0.014532635, -0.014286489, -0.014040917, -0.01379592, -0.013551501, -0.013307662, -0.013064403, -0.012821728, -0.012579636, -0.012338131, -0.012097214, -0.011856887, -0.011617151, -0.011378007, -0.011139459, -0.010901506, -0.010664151, -0.010427396, -0.010191242, -0.00995569, -0.009720742, -0.009486401, -0.009252666, -0.00901954, -0.008787025, -0.008555122, -0.008323832, -0.008093157, -0.007863098, -0.007633657, -0.007404835, -0.007176634, -0.006949055, -0.0067221, -0.00649577, -0.006270066, -0.00604499, -0.005820543, -0.005596726, -0.005373542, -0.00515099, -0.004929073, -0.004707792, -0.004487148, -0.004267142, -0.004047777, -0.003829052, -0.003610969, -0.00339353, -0.003176735, -0.002960586, -0.002745085, -0.002530232, -0.002316028, -0.002102475, -0.001889574, -0.001677326, -0.001465732, -0.001254793, -0.00104451, -0.000834885, -0.000625919, -0.000417612, -0.000209966, -2.98174e-06, 0.00020334, 0.000408997, 0.00061399, 0.000818317, 0.001021977, 0.001224969, 0.001427293, 0.001628946, 0.001829929, 0.00203024, 0.002229879, 0.002428844, 0.002627134, 0.00282475, 0.003021689, 0.00321795, 0.003413534, 0.00360844, 0.003802665, 0.00399621, 0.004189074, 0.004381256, 0.004572754, 0.00476357, 0.0049537, 0.005143146, 0.005331905, 0.005519978, 0.005707364, 0.005894062, 0.00608007, 0.006265389, 0.006450018, 0.006633957, 0.006817203, 0.006999758, 0.00718162, 0.007362788, 0.007543263, 0.007723043, 0.007902127, 0.008080516, 0.008258209, 0.008435204, 0.008611503, 0.008787103, 0.008962005, 0.009136208, 0.009309711, 0.009482514, 0.009654617, 0.009826019, 0.009996719, 0.010166718, 0.010336015, 0.010504608, 0.010672499, 0.010839686, 0.011006169, 0.011171948, 0.011337023, 0.011501392, 0.011665056, 0.011828014, 0.011990266, 0.012151812, 0.012312652, 0.012472784, 0.012632209, 0.012790927, 0.012948937, 0.013106239, 0.013262833, 0.013418718, 0.013573895, 0.013728362, 0.013882121, 0.01403517, 0.01418751, 0.014339141, 0.014490061, 0.014640272, 0.014789772, 0.014938563, 0.015086643, 0.015234013, 0.015380672, 0.015526621, 0.015671859, 0.015816386, 0.015960203, 0.016103309, 0.016245704, 0.016387388, 0.016528361, 0.016668624, 0.016808175, 0.016947016, 0.017085146, 0.017222566, 0.017359274, 0.017495272, 0.017630559, 0.017765136, 0.017899003, 0.018032159, 0.018164605, 0.018296341, 0.018427367, 0.018557683, 0.018687289, 0.018816187, 0.018944374, 0.019071853, 0.019198622, 0.019324683, 0.019450036, 0.01957468, 0.019698616, 0.019821844, 0.019944364, 0.020066177, 0.020187284, 0.020307683, 0.020427376, 0.020546362, 0.020664643, 0.020782218, 0.020899087, 0.021015252, 0.021130712, 0.021245468, 0.02135952, 0.021472869, 0.021585514, 0.021697457, 0.021808697, 0.021919236, 0.022029073, 0.022138208, 0.022246644, 0.022354379, 0.022461414, 0.02256775, 0.022673387, 0.022778326, 0.022882566, 0.02298611, 0.023088957, 0.023191107, 0.023292562, 0.023393321, 0.023493386, 0.023592756, 0.023691433, 0.023789417, 0.023886709, 0.023983308, 0.024079217, 0.024174435, 0.024268962, 0.024362801, 0.02445595, 0.024548412, 0.024640186, 0.024731273, 0.024821674, 0.024911389, 0.02500042, 0.025088766, 0.025176429, 0.02526341, 0.025349708, 0.025435326, 0.025520262, 0.025604519, 0.025688097, 0.025770997, 0.025853219, 0.025934764, 0.026015634, 0.026095828, 0.026175348, 0.026254194, 0.026332368, 0.02640987, 0.026486701, 0.026562861, 0.026638352, 0.026713175, 0.02678733, 0.026860818, 0.02693364, 0.027005797, 0.02707729, 0.02714812, 0.027218287, 0.027287793, 0.027356639, 0.027424825, 0.027492353, 0.027559222, 0.027625436, 0.027690993, 0.027755895, 0.027820144, 0.02788374, 0.027946685, 0.028008978, 0.028070622, 0.028131616, 0.028191964, 0.028251664, 0.028310718, 0.028369128, 0.028426895, 0.028484019, 0.028540501, 0.028596343, 0.028651546, 0.02870611, 0.028760038, 0.028813329, 0.028865985, 0.028918008, 0.028969397, 0.029020156, 0.029070283, 0.029119782, 0.029168652, 0.029216896, 0.029264513, 0.029311506, 0.029357876, 0.029403623, 0.029448749, 0.029493255, 0.029537142, 0.029580412, 0.029623065, 0.029665104, 0.029706529, 0.029747341, 0.029787541, 0.029827132, 0.029866114, 0.029904488, 0.029942255, 0.029979418, 0.030015977, 0.030051933, 0.030087288, 0.030122043, 0.0301562, 0.030189759, 0.030222722, 0.030255091, 0.030286866, 0.030318049, 0.030348641, 0.030378644, 0.030408059, 0.030436888, 0.030465131, 0.03049279, 0.030519866, 0.030546362, 0.030572277, 0.030597615, 0.030622375, 0.030646559, 0.03067017, 0.030693207, 0.030715673, 0.03073757, 0.030758897, 0.030779658, 0.030799853, 0.030819483, 0.030838551, 0.030857058, 0.030875004, 0.030892393, 0.030909224, 0.0309255, 0.030941222, 0.030956391, 0.030971009, 0.030985078, 0.030998599, 0.031011573, 0.031024002, 0.031035888, 0.031047232, 0.031058035, 0.031068299, 0.031078026, 0.031087217, 0.031095873, 0.031103997, 0.03111159, 0.031118652, 0.031125187, 0.031131195, 0.031136678, 0.031141638, 0.031146076, 0.031149993, 0.031153392, 0.031156274, 0.03115864, 0.031160492, 0.031161832, 0.031162662, 0.031162982, 0.031162794, 0.031162101, 0.031160903, 0.031159203, 0.031157002, 0.031154302, 0.031151103, 0.031147409, 0.03114322, 0.031138539, 0.031133366, 0.031127704, 0.031121554, 0.031114917, 0.031107797, 0.031100193, 0.031092108, 0.031083544, 0.031074502, 0.031064984, 0.031054992, 0.031044526, 0.03103359, 0.031022184, 0.031010311, 0.030997972, 0.030985168, 0.030971902, 0.030958175, 0.03094399, 0.030929346, 0.030914247, 0.030898694, 0.030882689, 0.030866234, 0.03084933, 0.030831978, 0.030814182, 0.030795942, 0.03077726, 0.030758138, 0.030738578, 0.030718582, 0.03069815, 0.030677286, 0.030655991, 0.030634266, 0.030612113, 0.030589535, 0.030566532, 0.030543107, 0.030519261, 0.030494997, 0.030470315, 0.030445218, 0.030419708, 0.030393786, 0.030367454, 0.030340715, 0.030313568, 0.030286018, 0.030258064, 0.03022971, 0.030200957, 0.030171806, 0.03014226, 0.03011232, 0.030081989, 0.030051267, 0.030020157, 0.029988661, 0.02995678, 0.029924517, 0.029891872, 0.029858848, 0.029825448, 0.029791671, 0.029757521, 0.029722999, 0.029688108, 0.029652848, 0.029617221, 0.029581231, 0.029544877, 0.029508163, 0.02947109, 0.02943366, 0.029395875, 0.029357736, 0.029319246, 0.029280406, 0.029241218, 0.029201684, 0.029161806, 0.029121585, 0.029081024, 0.029040125, 0.028998889, 0.028957318, 0.028915414, 0.028873178, 0.028830614, 0.028787721, 0.028744504, 0.028700962, 0.028657099, 0.028612916, 0.028568414, 0.028523597, 0.028478464, 0.02843302, 0.028387264, 0.0283412, 0.028294829, 0.028248153, 0.028201173, 0.028153892, 0.028106312, 0.028058434, 0.02801026, 0.027961793, 0.027913033, 0.027863984, 0.027814646, 0.027765021, 0.027715113, 0.027664921, 0.027614449, 0.027563698, 0.027512669, 0.027461366, 0.027409789, 0.027357941, 0.027305824, 0.027253438, 0.027200787, 0.027147872, 0.027094695, 0.027041258, 0.026987562, 0.02693361, 0.026879403, 0.026824944, 0.026770233, 0.026715274, 0.026660068, 0.026604616, 0.026548921, 0.026492985, 0.026436808, 0.026380394, 0.026323745, 0.026266861, 0.026209744, 0.026152398, 0.026094823, 0.026037022, 0.025978995, 0.025920746, 0.025862276, 0.025803587, 0.02574468, 0.025685558, 0.025626222, 0.025566675, 0.025506917, 0.025446952, 0.02538678, 0.025326404, 0.025265826, 0.025205047, 0.025144069, 0.025082894, 0.025021525, 0.024959961, 0.024898207, 0.024836263, 0.024774131, 0.024711813, 0.024649311, 0.024586627, 0.024523763, 0.02446072, 0.0243975, 0.024334106, 0.024270538, 0.024206799, 0.024142891, 0.024078815, 0.024014573, 0.023950168, 0.0238856, 0.023820872, 0.023755985, 0.023690942, 0.023625744, 0.023560393, 0.02349489, 0.023429238, 0.023363439, 0.023297493, 0.023231404, 0.023165172, 0.0230988, 0.023032289, 0.022965642, 0.022898859, 0.022831943, 0.022764896, 0.022697719, 0.022630413, 0.022562982, 0.022495427, 0.022427748, 0.022359949, 0.022292031, 0.022223996, 0.022155845, 0.022087581, 0.022019204, 0.021950717, 0.021882122, 0.02181342, 0.021744613, 0.021675703, 0.021606691, 0.02153758, 0.021468371, 0.021399065, 0.021329665, 0.021260172, 0.021190589, 0.021120915, 0.021051155, 0.020981308, 0.020911377, 0.020841364, 0.020771271, 0.020701098, 0.020630848, 0.020560522, 0.020490122, 0.020419651, 0.020349109, 0.020278498, 0.02020782, 0.020137076, 0.020066269, 0.0199954, 0.019924471, 0.019853483, 0.019782438, 0.019711337, 0.019640183, 0.019568977, 0.019497721, 0.019426416, 0.019355064, 0.019283667, 0.019212226, 0.019140742, 0.019069219, 0.018997657, 0.018926057, 0.018854422, 0.018782754, 0.018711053, 0.018639321, 0.01856756, 0.018495772, 0.018423958, 0.01835212, 0.01828026, 0.018208378, 0.018136477, 0.018064559, 0.017992624, 0.017920674, 0.017848712, 0.017776738, 0.017704754, 0.017632762, 0.017560763, 0.01748876, 0.017416752, 0.017344743, 0.017272733, 0.017200724, 0.017128718, 0.017056715, 0.016984719, 0.01691273, 0.01684075, 0.01676878, 0.016696821, 0.016624877, 0.016552947, 0.016481033, 0.016409137, 0.016337261, 0.016265405, 0.016193572, 0.016121763, 0.016049979, 0.015978222, 0.015906493, 0.015834794, 0.015763127, 0.015691492, 0.015619891, 0.015548326, 0.015476798, 0.015405309, 0.01533386, 0.015262452, 0.015191087, 0.015119766, 0.015048491, 0.014977263, 0.014906084, 0.014834955, 0.014763877, 0.014692852, 0.014621881, 0.014550966, 0.014480108, 0.014409309, 0.014338569, 0.01426789, 0.014197274, 0.014126722, 0.014056235, 0.013985815, 0.013915463, 0.01384518, 0.013774968, 0.013704828, 0.013634762, 0.01356477, 0.013494854, 0.013425016, 0.013355256, 0.013285576, 0.013215978, 0.013146462, 0.013077031, 0.013007684, 0.012938425, 0.012869253, 0.01280017, 0.012731177, 0.012662277, 0.012593469, 0.012524755, 0.012456137, 0.012387616, 0.012319192, 0.012250868, 0.012182645, 0.012114523, 0.012046504, 0.011978589, 0.011910779, 0.011843076, 0.011775481, 0.011707995, 0.011640619, 0.011573355, 0.011506203, 0.011439165, 0.011372242, 0.011305435, 0.011238746, 0.011172175, 0.011105724, 0.011039393, 0.010973185, 0.010907099, 0.010841138, 0.010775302, 0.010709593, 0.010644011, 0.010578559, 0.010513236, 0.010448044, 0.010382984, 0.010318057, 0.010253265, 0.010188608, 0.010124088, 0.010059705, 0.009995461, 0.009931356, 0.009867393, 0.009803571, 0.009739892, 0.009676357, 0.009612967, 0.009549723, 0.009486626, 0.009423677, 0.009360877, 0.009298227, 0.009235729, 0.009173382, 0.009111189, 0.00904915, 0.008987266, 0.008925538, 0.008863968, 0.008802555, 0.008741301, 0.008680208, 0.008619275, 0.008558504, 0.008497897, 0.008437453, 0.008377173, 0.00831706, 0.008257113, 0.008197333, 0.008137722, 0.008078281, 0.00801901, 0.007959909, 0.007900981, 0.007842226, 0.007783645, 0.007725238, 0.007667007, 0.007608953, 0.007551076, 0.007493377, 0.007435857, 0.007378516, 0.007321357, 0.007264379, 0.007207584, 0.007150972, 0.007094543, 0.0070383, 0.006982242, 0.006926371, 0.006870687, 0.006815191, 0.006759883, 0.006704766, 0.006649839, 0.006595102, 0.006540558, 0.006486207, 0.006432049, 0.006378085, 0.006324316, 0.006270742, 0.006217365, 0.006164185, 0.006111203, 0.006058419, 0.006005835, 0.005953451, 0.005901267, 0.005849284, 0.005797504, 0.005745926, 0.005694552, 0.005643382, 0.005592416, 0.005541656, 0.005491101, 0.005440754, 0.005390613, 0.005340681, 0.005290957, 0.005241443, 0.005192138, 0.005143044, 0.00509416, 0.005045489, 0.004997029, 0.004948783, 0.004900749, 0.00485293, 0.004805325, 0.004757936, 0.004710762, 0.004663805, 0.004617064, 0.00457054, 0.004524235, 0.004478148, 0.00443228, 0.004386631, 0.004341203, 0.004295994, 0.004251007, 0.004206242, 0.004161698, 0.004117377, 0.004073279, 0.004029405, 0.003985754, 0.003942328, 0.003899127, 0.003856151, 0.003813401, 0.003770877, 0.00372858, 0.00368651, 0.003644668, 0.003603053, 0.003561667, 0.00352051, 0.003479582, 0.003438884, 0.003398415, 0.003358178, 0.00331817, 0.003278394, 0.00323885, 0.003199537, 0.003160457, 0.00312161, 0.003082995, 0.003044614, 0.003006466, 0.002968553, 0.002930874, 0.002893429, 0.00285622, 0.002819246, 0.002782507, 0.002746004, 0.002709738, 0.002673708, 0.002637915, 0.002602359, 0.00256704, 0.002531959, 0.002497116, 0.002462511, 0.002428145, 0.002394017, 0.002360128, 0.002326478, 0.002293068, 0.002259897, 0.002226966, 0.002194275, 0.002161824, 0.002129614, 0.002097644, 0.002065916, 0.002034428, 0.002003181, 0.001972176, 0.001941413, 0.001910891, 0.001880611, 0.001850574, 0.001820778, 0.001791225, 0.001761914, 0.001732846, 0.001704021, 0.001675439, 0.001647099, 0.001619003, 0.00159115, 0.001563541, 0.001536175, 0.001509052, 0.001482173, 0.001455538, 0.001429147, 0.001402999, 0.001377096, 0.001351436, 0.00132602, 0.001300849, 0.001275922, 0.001251239, 0.0012268, 0.001202605, 0.001178655, 0.001154949, 0.001131488, 0.001108271, 0.001085298, 0.001062569, 0.001040085, 0.001017845, 0.00099585, 0.000974099, 0.000952592, 0.000931329, 0.000910311, 0.000889536, 0.000869006, 0.00084872, 0.000828678, 0.00080888, 0.000789326, 0.000770016, 0.00075095, 0.000732127, 0.000713548, 0.000695212, 0.00067712, 0.000659271, 0.000641665, 0.000624302, 0.000607183, 0.000590306, 0.000573672, 0.000557281, 0.000541132, 0.000525225, 0.000509561, 0.000494139, 0.000478958, 0.00046402, 0.000449323, 0.000434867, 0.000420653, 0.000406679, 0.000392947, 0.000379455, 0.000366204, 0.000353193, 0.000340423, 0.000327892, 0.000315601, 0.000303549, 0.000291737, 0.000280163, 0.000268829, 0.000257733, 0.000246875, 0.000236256, 0.000225874, 0.00021573, 0.000205824, 0.000196154, 0.000186722, 0.000177525, 0.000168566, 0.000159842, 0.000151354, 0.000143101, 0.000135084, 0.000127301, 0.000119753, 0.000112439, 0.000105359, 9.85127e-05, 9.18997e-05, 8.55197e-05, 7.93723e-05, 7.34573e-05, 6.77742e-05, 6.23228e-05, 5.71027e-05, 5.21136e-05, 4.73551e-05, 4.28268e-05, 3.85284e-05, 3.44595e-05, 3.06197e-05, 2.70088e-05, 2.36262e-05, 2.04716e-05, 1.75447e-05, 1.4845e-05, 1.23722e-05, 1.01258e-05, 8.10542e-06, 6.31069e-06, 4.74118e-06, 3.39648e-06, 2.27616e-06, 1.3798e-06, 7.06984e-07, 0 };

typedef unsigned __int16 WORD;//2 байта
//typedef unsigned int DWORD;//4 байта
typedef long LONG;//4 байта
typedef unsigned char BYTE;//1 байт


class FileWithDes {
    FILE* f = NULL;
public:
    FileWithDes(const char A[], const char B[]) {
        f = fopen(A, B);
        if (!f) {
            cout << "файл " << A << " не существует или не удалось создать\n";
            throw;
        }
    };

    FILE* getF() {
        return f;
    };

    ~FileWithDes() {
        fclose(f);
        f = NULL;
    }
};

class PIX {
public:
    double rgbtBlue = 0;
    double rgbtGreen = 0;
    double rgbtRed = 0;

    void clc() {
        rgbtBlue = 0;
        rgbtGreen = 0;
        rgbtRed = 0;
    }

    void norm() {
        rgbtBlue = min(255, rgbtBlue);
        rgbtGreen = min(255, rgbtGreen);
        rgbtRed = min(255, rgbtRed);

        rgbtBlue = max(0, rgbtBlue);
        rgbtGreen = max(0, rgbtGreen);
        rgbtRed = max(0, rgbtRed);
    }
};

class MATR {
    RGBTRIPLE** matrIn;
    size_t Hin;
    size_t Win;
    size_t del;
    size_t offset;
    size_t  Worig;
    size_t padding;


public:

    MATR(size_t Hin, size_t Win, size_t offset, size_t  Worig, size_t padding) 
        : Hin(Hin), Win(Win), offset(offset), Worig(Worig), padding(padding)
    {
        del = Hin + 2 * extend;
        matrIn = new RGBTRIPLE * [del];
        for (size_t i = 0; i < del; ++i) {
            matrIn[i] = new RGBTRIPLE[Win + 2 * extend];
        }
    }

    ~MATR() {
        for (size_t i = 0; i < del; ++i) {
            delete[] matrIn[i];
        }
        delete[] matrIn;
    }

    RGBTRIPLE get(size_t i, size_t j) {
        return matrIn[i][j];
    }

    void ReadFrame(FILE* f, int X, int Y, int startx, int starty, int h, int w) 
        //X,Y -откуда начинать читать; start..- куда начинать читать; h,w - а сколько вообще читать
    {
        size_t seek = offset + Y * (Worig * sizeof(RGBTRIPLE) + padding) + X * sizeof(RGBTRIPLE);
        fseek(f, seek, SEEK_SET);
        seek = (Worig + w) * sizeof(RGBTRIPLE) + padding;
        for (int y = 0; y < h; ++y) {
            fread(matrIn[starty+y] + startx, w * 3, 1, f);
            fseek(f, seek, SEEK_SET);
        }

        for (int y = 0; y < Hin; ++y) {
            for (int i = 0; i < startx; ++i) {//расширение в лево <--
                matrIn[y][i] = matrIn[y][startx];
            }
            for (int i = startx+w; i < Win; ++i) {//расширение в право -->
                matrIn[y][i] = matrIn[y][startx+w-1];
            }
        }
        for (int x = 0; x < Hin; ++x) {
            for (int i = 0; i < starty; ++i) {//расширение в низ V
                matrIn[x][i] = matrIn[x][startx];
            }
            for (int i = starty + h; i < Hin; ++i) {//расширение в верх ^
                matrIn[x][i] = matrIn[x][starty + h - 1];
            }
        }

    }

    //void FillAll(FILE* f, int padding) {//...
    
    //    for (size_t i = extend; i < Hin + extend; ++i) {
    //        fread(matrIn[i] + extend, Win * 3, 1, f);
    //        fseek(f, padding, SEEK_CUR);
    //        for (size_t j = 0; j < extend; ++j) {//расширение по бокам
    //            matrIn[i][j] = matrIn[i][2 * extend - 1 - j];
    //            matrIn[i][Win + 2 * extend - 1 - j] = matrIn[i][Win + j];
    //        }
    //    }
    // 
    //    for (size_t i = 0; i < extend; ++i) {//расширение вверх и вниз
    //        memcpy(matrIn[i], matrIn[2 * extend - 1 - i], (Win + 2 * extend) * sizeof(RGBTRIPLE));
    //        memcpy(matrIn[Hin + 2 * extend - 1 - i], matrIn[Hin + i], (Win + 2 * extend) * sizeof(RGBTRIPLE));
    //    }
    //}

    //RGBTRIPLE getBilineWiki(double Y1, double X1) {//...
   
    //    PIX Ave;
    //    Ave.clc();
    //    RGBTRIPLE Out;
    //
    //    size_t X0, Y0;
    //    X0 = X1;//округление вниз//целая часть
    //    Y0 = Y1;
    //
    //    double x = X1 - X0;
    //    double y = Y1 - Y0;
    //
    //    x = 1 - x;//они реально инвертированы
    //    y = 1 - y;
    //    
    //    double b[4][4] = {
    //        {
    //            //5,
    //            (1 / 36.)* x* y* (x - 1)* (x - 2)* (y - 1)* (y - 2),
    //            (-1 / 12.)* x* (x - 1)* (x - 2)* (y - 1)* (y - 2)* (y + 1),
    //            (1 / 12.)* x* y* (x - 1)* (x - 2)* (y + 1)* (y - 2),
    //            (-1 / 36.)* x* y* (x - 1)* (x - 2)* (y - 1)* (y + 1)
    //        },
    //        {
    //            (-1 / 12.)* y* (x - 1)* (x - 2)* (x + 1)* (y - 1)* (y - 2),
    //            (1 / 4.)* (x - 1)* (x - 2)* (x + 1)* (y - 1)* (y - 2)* (y + 1),
    //            (-1 / 4.)* y* (x - 1)* (x - 2)* (x + 1)* (y + 1)* (y - 2),
    //            (1 / 12.)* y* (x - 1)* (x - 2)* (x + 1)* (y - 1)* (y + 1)
    //        },
    //        {
    //            (1 / 12.)* x* y* (x + 1)* (x - 2)* (y - 1)* (y - 2),
    //            (-1 / 4.)* x* (x + 1)* (x - 2)* (y - 1)* (y - 2)* (y + 1),
    //            (1 / 4.)* x* y* (x + 1)* (x - 2)* (y + 1)* (y - 2),
    //            (-1 / 12.)* x* y* (x + 1)* (x - 2)* (y - 1)* (y + 1)
    //        },
    //        {
    //            (-1 / 36.)* x* y* (x - 1)* (x + 1)* (y - 1)* (y - 2),
    //            (1 / 12.)* x* (x - 1)* (x + 1)* (y - 1)* (y - 2)* (y + 1),
    //            (-1 / 12.)* x* y* (x - 1)* (x + 1)* (y + 1)* (y - 2),
    //            (1 / 36.)* x* y* (x - 1)* (x + 1)* (y - 1)* (y + 1)
    //        }
    //    };
    //
    //    //b[0] = 1 / 4 * (x - 1) * (x - 2) * (x + 1) * (y - 1) * (y - 2) * (y + 1);
    //    //b[1] = -1 / 4 * x * (x + 1) * (x - 2) * (y - 1) * (y - 2) * (y + 1);
    //    //b[2] = -1 / 4 * y * (x - 1) * (x - 2) * (x + 1) * (y + 1) * (y - 2);
    //    //b[3] = 1 / 4 * x * y * (x + 1) * (x - 2) * (y + 1) * (y - 2);
    //    //b[4] = -1 / 12 * x * (x - 1) * (x - 2) * (y - 1) * (y - 2) * (y + 1);
    //    //b[5] = -1 / 12 * y * (x - 1) * (x - 2) * (x + 1) * (y - 1) * (y - 2);
    //    //b[6] = 1 / 12 * x * y * (x - 1) * (x - 2) * (y + 1) * (y - 2);
    //    //b[7] = 1 / 12 * x * y * (x + 1) * (x - 2) * (y - 1) * (y - 2);
    //    //b[8] = 1 / 12 * x * (x - 1) * (x + 1) * (y - 1) * (y - 2) * (y + 1);
    //    //b[9] = 1 / 12 * y * (x - 1) * (x - 2) * (x + 1) * (y - 1) * (y + 1);
    //    //b[10] = 1 / 36 * x * y * (x - 1) * (x - 2) * (y - 1) * (y - 2);
    //    //b[11] = -1 / 12 * x * y * (x - 1) * (x + 1) * (y + 1) * (y - 2);
    //    //b[12] = -1 / 12 * x * y * (x + 1) * (x - 2) * (y - 1) * (y + 1);
    //    //b[13] = -1 / 36 * x * y * (x - 1) * (x + 1) * (y - 1) * (y - 2);
    //    //b[14] = -1 / 36 * x * y * (x - 1) * (x - 2) * (y - 1) * (y + 1);
    //    //b[15] = 1 / 36 * x * y * (x - 1) * (x + 1) * (y - 1) * (y + 1);
    //
    //    Ave.clc();
    //
    //    for (int i = 0; i < 4; ++i)
    //        for (int j = 0; j < 4; ++j)
    //        {
    //            Ave.rgbtBlue += matrIn[Y0 + i - 1][X0 + j - 1].rgbtBlue * b[i][j];
    //            Ave.rgbtGreen += matrIn[Y0 + i - 1][X0 + j - 1].rgbtGreen * b[i][j];
    //            Ave.rgbtRed += matrIn[Y0 + i - 1][X0 + j - 1].rgbtRed * b[i][j];
    //        }
    //
    //    Ave.norm();
    //    Out.rgbtBlue = Ave.rgbtBlue;
    //    Out.rgbtGreen = Ave.rgbtGreen;
    //    Out.rgbtRed = Ave.rgbtRed;
    //
    //    return Out;
    //}

    //RGBTRIPLE getLans(double Y1, double X1) {//...
    
    //    PIX Ave;
    //    Ave.clc();
    //    RGBTRIPLE Out;
    //
    //    size_t X0, Y0;
    //    X0 = X1;//округление вниз//целая часть
    //    Y0 = Y1;
    //
    //    double x = X1 - X0;
    //    double y = Y1 - Y0;
    //
    //    //double b[4][4] = {
    //    //    {
    //    //        //5,
    //    //        (1 / 36.) * x * y * (x - 1) * (x - 2) * (y - 1) * (y - 2),
    //    //        (-1 / 12.) * x * (x - 1) * (x - 2) * (y - 1) * (y - 2) * (y + 1),
    //    //        (1 / 12.) * x * y * (x - 1) * (x - 2) * (y + 1) * (y - 2),
    //    //        (-1 / 36.) * x * y * (x - 1) * (x - 2) * (y - 1) * (y + 1)
    //    //    },
    //    //    {
    //    //        (-1 / 12.) * y * (x - 1) * (x - 2) * (x + 1) * (y - 1) * (y - 2),
    //    //        (1 / 4.) * (x - 1) * (x - 2) * (x + 1) * (y - 1) * (y - 2) * (y + 1),
    //    //        (-1 / 4.) * y * (x - 1) * (x - 2) * (x + 1) * (y + 1) * (y - 2),
    //    //        (1 / 12.) * y * (x - 1) * (x - 2) * (x + 1) * (y - 1) * (y + 1)
    //    //    },
    //    //    {
    //    //        (1 / 12.) * x * y * (x + 1) * (x - 2) * (y - 1) * (y - 2),
    //    //        (-1 / 4.) * x * (x + 1) * (x - 2) * (y - 1) * (y - 2) * (y + 1),
    //    //        (1 / 4.) * x * y * (x + 1) * (x - 2) * (y + 1) * (y - 2),
    //    //        (-1 / 12.) * x * y * (x + 1) * (x - 2) * (y - 1) * (y + 1)
    //    //    },
    //    //    {
    //    //        (-1 / 36.) * x * y * (x - 1) * (x + 1) * (y - 1) * (y - 2),
    //    //        (1 / 12.) * x * (x - 1) * (x + 1) * (y - 1) * (y - 2) * (y + 1),
    //    //        (-1 / 12.) * x * y * (x - 1) * (x + 1) * (y + 1) * (y - 2),
    //    //        (1 / 36.) * x * y * (x - 1) * (x + 1) * (y - 1) * (y + 1)
    //    //    }
    //    //};
    //
    //    int a = 3;
    //
    //    double ki = 1;
    //    double kj = 1;
    //
    //    for (int i = -2; i < 4; ++i)
    //    {
    //        if (x + i == 0)
    //            ki = 1;
    //        else
    //            ki = a * sin(M_PI * (x - i)) * sin(M_PI * (x - i) / a) / (M_PI * M_PI * (x - i) * (x - i));
    //
    //        //cout << "\n\nki = " << ki;
    //        for (int j = -2; j < 4; ++j)
    //        {
    //            if (y + j == 0)
    //                kj = 1;
    //            else
    //                kj= a * sin(M_PI * (y - j)) * sin(M_PI * (y - j) / a) / (M_PI * M_PI * (y - j) * (y - j));
    //
    //            Ave.rgbtBlue += ki * kj * matrIn[j + Y0][i + X0].rgbtBlue;
    //            Ave.rgbtGreen += ki * kj * matrIn[j + Y0][i + X0].rgbtGreen;
    //            Ave.rgbtRed += ki * kj * matrIn[j + Y0][i + X0].rgbtRed;
    //        }
    //    }
    //
    //    Ave.norm();
    //    Out.rgbtBlue = Ave.rgbtBlue;
    //    Out.rgbtGreen = Ave.rgbtGreen;
    //    Out.rgbtRed = Ave.rgbtRed;
    //
    //    return Out;
    //}

    RGBTRIPLE getLansGlobFrame(double Y1, double X1) {
        PIX Ave;
        Ave.clc();
        RGBTRIPLE Out;

        size_t X0, Y0;
        X0 = X1;//округление вниз//целая часть
        Y0 = Y1;

        double x = X1 - X0;
        double y = Y1 - Y0;

        int a = 3;

        double ki = 1;
        double kj = 1;
        int kim;
        int kjm;
        double kid;
        double kjd;

        for (int i = -2; i < 4; ++i)
        {
            kim = (x - i) * 1000 + 3000;
            kid = (x - i) * 1000 + 3000 - kim;

            ki = LansoshConst[kim] * (1 - kid) + LansoshConst[kim + 1] * (kid);

            for (int j = -2; j < 4; ++j)
            {
                kjm = (y - j) * 1000 + 3000;
                kjd = (y - j) * 1000 + 3000 - kjm;

                kj = LansoshConst[kjm] * (1 - kjd) + LansoshConst[kjm + 1] * (kjd);

                Ave.rgbtBlue += ki * kj * matrIn[j + Y0][i + X0].rgbtBlue;
                Ave.rgbtGreen += ki * kj * matrIn[j + Y0][i + X0].rgbtGreen;
                Ave.rgbtRed += ki * kj * matrIn[j + Y0][i + X0].rgbtRed;
            }
        }

        Ave.norm();
        Out.rgbtBlue = Ave.rgbtBlue;
        Out.rgbtGreen = Ave.rgbtGreen;
        Out.rgbtRed = Ave.rgbtRed;

        return Out;
    }

    //RGBTRIPLE getLansGlob(double Y1, double X1) {//,,,

    //    PIX Ave;
    //    Ave.clc();
    //    RGBTRIPLE Out;
    //
    //    size_t X0, Y0;
    //    X0 = X1;//округление вниз//целая часть
    //    Y0 = Y1;
    //
    //    double x = X1 - X0;
    //    double y = Y1 - Y0;
    //
    //    int a = 3;
    //
    //    double ki = 1;
    //    double kj = 1;
    //    int kim;
    //    int kjm;
    //    double kid;
    //    double kjd;
    //
    //    for (int i = -2; i < 4; ++i)
    //    {
    //        kim = (x - i) * 1000 + 3000;
    //        kid = (x - i) * 1000 + 3000 - kim;
    //
    //        ki = LansoshConst[kim] * (1 - kid) + LansoshConst[kim + 1] * (kid);
    //
    //        for (int j = -2; j < 4; ++j)
    //        {
    //            kjm = (y - j) * 1000 + 3000;
    //            kjd = (y - j) * 1000 + 3000 - kjm;
    //
    //            kj = LansoshConst[kjm] * (1 - kjd) + LansoshConst[kjm + 1] * (kjd);
    //
    //            Ave.rgbtBlue += ki * kj * matrIn[j + Y0][i + X0].rgbtBlue;
    //            Ave.rgbtGreen += ki * kj * matrIn[j + Y0][i + X0].rgbtGreen;
    //            Ave.rgbtRed += ki * kj * matrIn[j + Y0][i + X0].rgbtRed;
    //        }
    //    }
    //
    //    Ave.norm();
    //    Out.rgbtBlue = Ave.rgbtBlue;
    //    Out.rgbtGreen = Ave.rgbtGreen;
    //    Out.rgbtRed = Ave.rgbtRed;
    //
    //    return Out;
    //}

    //RGBTRIPLE getLansProg(double Y1, double X1, double LansoshProg[]) {//...
    
    //    PIX Ave;
    //    Ave.clc();
    //    RGBTRIPLE Out;
    //
    //    size_t X0, Y0;
    //    X0 = X1;//округление вниз//целая часть
    //    Y0 = Y1;
    //
    //    double x = X1 - X0;
    //    double y = Y1 - Y0;
    //
    //    int a = 3;
    //
    //    double ki = 1;
    //    double kj = 1;
    //    int kim;
    //    int kjm;
    //    double kid;
    //    double kjd;
    //
    //    for (int i = -2; i < 4; ++i)
    //    {
    //        kim = (x - i) * 1000 + 3000;
    //        kid = (x - i) * 1000 + 3000 - kim;
    //
    //        ki = LansoshProg[kim] * (1 - kid) + LansoshProg[kim + 1] * (kid);
    //
    //        for (int j = -2; j < 4; ++j)
    //        {
    //            kjm = (y - j) * 1000 + 3000;
    //            kjd = (y - j) * 1000 + 3000 - kjm;
    //
    //            kj = LansoshProg[kjm] * (1 - kjd) + LansoshProg[kjm + 1] * (kjd);
    //
    //            Ave.rgbtBlue += ki * kj * matrIn[j + Y0][i + X0].rgbtBlue;
    //            Ave.rgbtGreen += ki * kj * matrIn[j + Y0][i + X0].rgbtGreen;
    //            Ave.rgbtRed += ki * kj * matrIn[j + Y0][i + X0].rgbtRed;
    //        }
    //    }
    //
    //    Ave.norm();
    //    Out.rgbtBlue = Ave.rgbtBlue;
    //    Out.rgbtGreen = Ave.rgbtGreen;
    //    Out.rgbtRed = Ave.rgbtRed;
    //
    //    return Out;
    //}

    //RGBTRIPLE getAve2Per(double Y1, double X1) {//...
    
    //    PIX Ave;
    //    Ave.clc();
    //    size_t x, y;
    //    x = X1;//округление вниз
    //    y = Y1;
    //    RGBTRIPLE Out;
    //
    //    Ave.rgbtBlue = matrIn[y][x].rgbtBlue * (x + 1 - X1) * (y + 1 - Y1) + matrIn[y + 1][x].rgbtBlue * (x + 1 - X1) * (Y1 - y) + matrIn[y][x + 1].rgbtBlue * (X1 - x) * (y + 1 - Y1) + matrIn[y + 1][x + 1].rgbtBlue * (X1 - x) * (Y1 - y);
    //    Ave.rgbtGreen = matrIn[y][x].rgbtGreen * (x + 1 - X1) * (y + 1 - Y1) + matrIn[y + 1][x].rgbtGreen * (x + 1 - X1) * (Y1 - y) + matrIn[y][x + 1].rgbtGreen * (X1 - x) * (y + 1 - Y1) + matrIn[y + 1][x + 1].rgbtGreen * (X1 - x) * (Y1 - y);
    //    Ave.rgbtRed = matrIn[y][x].rgbtRed * (x + 1 - X1) * (y + 1 - Y1) + matrIn[y + 1][x].rgbtRed * (x + 1 - X1) * (Y1 - y) + matrIn[y][x + 1].rgbtRed * (X1 - x) * (y + 1 - Y1) + matrIn[y + 1][x + 1].rgbtRed * (X1 - x) * (Y1 - y);
    //
    //    //sAve.norm();
    //    Out.rgbtBlue = Ave.rgbtBlue;
    //    Out.rgbtGreen = Ave.rgbtGreen;
    //    Out.rgbtRed = Ave.rgbtRed;
    //
    //    return Out;
    //}

    //RGBTRIPLE getAve2(double Y1, double X1) {//...
    
    //    PIX Ave;
    //    Ave.clc();
    //    size_t x, y;
    //    x = X1;//округление вниз
    //    y = Y1;
    //    RGBTRIPLE Out;
    //
    //    Ave.rgbtBlue = (matrIn[y][x].rgbtBlue + matrIn[y][x + 1].rgbtBlue + matrIn[y + 1][x].rgbtBlue + matrIn[y + 1][x + 1].rgbtBlue) / 4;
    //    Ave.rgbtGreen = (matrIn[y][x].rgbtGreen + matrIn[y][x + 1].rgbtGreen + matrIn[y + 1][x].rgbtGreen + matrIn[y + 1][x + 1].rgbtGreen) / 4;
    //    Ave.rgbtRed = (matrIn[y][x].rgbtRed + matrIn[y][x + 1].rgbtRed + matrIn[y + 1][x].rgbtRed + matrIn[y + 1][x + 1].rgbtRed) / 4;
    //
    //    //Ave.norm();
    //    Out.rgbtBlue = Ave.rgbtBlue;
    //    Out.rgbtGreen = Ave.rgbtGreen;
    //    Out.rgbtRed = Ave.rgbtRed;
    //
    //    return Out;
    //}

    RGBTRIPLE** getM() {
        return matrIn;
    };

};

class DoOutFile {
    size_t Hout;
    size_t Wout;
    int paddingOut;
    size_t offsetOut=0;

    vector<RGBTRIPLE> lineOut;

    RGBTRIPLE black;

    double dx = 0;
    double dy = 0;

public:

    DoOutFile(size_t Hin, size_t Win, LONG& Wout1, LONG& Hout1, int& paddingOut1){

        double Ax = 0, Ay = 0;
        double Bx, By;
        double Cx, Cy;
        double Dx, Dy;

        double HoutD, WoutD;

        Bx = Hin * sinA;
        By = Hin * cosA;

        Cx = Hin * sinA + Win * cosA;
        Cy = Hin * cosA -1*( Win * sinA);

        Dx = Win * cosA;
        Dy = -1 * (Win * sinA);

        dx = min(Ax, Bx);
        dx = min(dx, Cx);
        dx = min(dx, Dx);


        dy = min(Ay, By);
        dy = min(dy, Cy);
        dy = min(dy, Dy);


        WoutD = max(Ax, Bx);
        WoutD = max(WoutD, Cx);
        WoutD = max(WoutD, Dx)+1;
        WoutD -= dx;
        Wout = ceil(WoutD);
        Wout1 = Wout;

        HoutD = max(Ay, By);
        HoutD = max(HoutD, Cy);
        HoutD= max(HoutD, Dy)+1;
        HoutD -= dy;
        Hout = ceil(HoutD);
        Hout1 = Hout;

        paddingOut = (4 - (Wout * 3) % 4) % 4;
        paddingOut1 = paddingOut;

        lineOut.resize(sampling);

        black.rgbtBlue = 0;
        black.rgbtGreen = 0;
        black.rgbtRed = 0;
    }

    void setOffset(size_t offsetOut1) {
        offsetOut = offsetOut1;
    }

    void FrameCoordinate(int Xframe, int Yframe, double& minX, double& minY, double& maxX, double&maxY) {
        double Ax, Ay;

        Ax = (sampling * Xframe + dx) * cosA - (sampling * Yframe + dy) * sinA;
        Ay = (sampling * Xframe + dx) * sinA + (sampling * Yframe + dy) * cosA;
        minX = maxX = Ax;
        minY = maxY = Ay;
        Ax = (sampling * Xframe + sampling - 1 + dx) * cosA - (sampling * Yframe + dy) * sinA;
        Ay = (sampling * Xframe + sampling - 1 + dx) * sinA + (sampling * Yframe + dy) * cosA;
        minX = min(minX, Ax);
        minY = min(minY, Ay);
        maxX = max(maxX, Ax);
        maxY = max(maxY, Ay);
        Ax = (sampling * Xframe + sampling - 1 + dx) * cosA - (sampling * Yframe + sampling - 1 + dy) * sinA;
        Ay = (sampling * Xframe + sampling - 1 + dx) * sinA + (sampling * Yframe + sampling - 1 + dy) * cosA;
        minX = min(minX, Ax);
        minY = min(minY, Ay);
        maxX = max(maxX, Ax);
        maxY = max(maxY, Ay);
        Ax = (sampling * Xframe + dx) * cosA - (sampling * Yframe + sampling - 1 + dy) * sinA;
        Ay = (sampling * Xframe + dx) * sinA + (sampling * Yframe + sampling - 1 + dy) * cosA;
        minX = min(minX, Ax);
        minY = min(minY, Ay);
        maxX = max(maxX, Ax);
        maxY = max(maxY, Ay);
        //это было определение координат для кусочка
    }

    void OutFile(size_t Hin, size_t Win, FILE* f,MATR& matrOrigin, FILE* fIn){
        double minX, minY;
        double maxX, maxY;

        double Y1;
        double X1;

        //double LansoshProg[6001];
        //FileWithDes fL("LansoshProg.lans", "rb");//LansoshProg
        //fread(LansoshProg, sizeof(LansoshProg), 1, fL.getF());

        int Nh = Hout / sampling;
        int Nw = Wout / sampling;
        int seek = offsetOut;

        for (int Yframe = 0; Yframe < Nh; ++Yframe) {
            for (int Xframe = 0; Xframe < Nw; ++Xframe) {//перебор всех фреймов, кроме крайних
                FrameCoordinate(Xframe, Yframe, minX, minY, maxX, maxY);

                //отправка на чтение
                int X=minX, Y=minY;
                int startX = 0, startY = 0;
                int h = sampling, w = sampling;
                if (minX < 0) {
                    X = 0;
                    startX = -minX;
                    w -= startX;
                }
                if (minY < 0) {
                    Y = 0;
                    startY = -minY;
                    h -= startY;
                }
                if (maxX > Win-1) {
                    w -= (maxX-Win);
                }
                if (maxY > Hin - 1) {
                    h -= (maxY - Hin);
                }
                matrOrigin.ReadFrame(fIn, X,  Y, startX, startY, h, w);

                fseek(f, seek, SEEK_SET);
                seek = Wout*sizeof(RGBTRIPLE) + paddingOut - sampling;

                for (int y = sampling * Yframe; y < sampling * (Yframe + 1); ++y) {
                    for (int x = sampling * Xframe; x < sampling * (Xframe + 1); ++x) {
                        Y1 = (x + dx) * sinA + (y + dy) * cosA;
                        X1 = (x + dx) * cosA - (y + dy) * sinA;

                        if (X1 >= extend && X1 <= Win + extend - 1 && Y1 >= extend && Y1 <= Hin + extend - 1) {
                            X1 = X1 - X + extend;
                            Y1 = Y1 - Y + extend;

                            //lineOut[x - sampling * Xframe] = matrOrigin.get(Y1, X1);
                            lineOut[x - sampling * Xframe] = matrOrigin.getLansGlobFrame(Y1, X1);
                        }
                        else {
                            lineOut[x - sampling * Xframe] = black;
                        }
                    }
                    fwrite(lineOut.data(), Wout * 3, 1, f);//запись в bmp
                    fseek(f, seek, SEEK_CUR);
                }
            }
        }

        if (Wout % sampling) {
            for (int Yframe = 0; Yframe < Nh; ++Yframe) {
                FrameCoordinate(Nw, Yframe, minX, minY, maxX, maxY);

                int X = minX, Y = minY;
                int startX = 0, startY = 0;
                int h = sampling, w = sampling;
                if (minX < 0) {
                    X = 0;
                    startX = -minX;
                    w -= startX;
                }
                if (minY < 0) {
                    Y = 0;
                    startY = -minY;
                    h -= startY;
                }
                if (maxY > Hin - 1) {
                    h -= (maxY - Hin);
                }
                w = Wout % sampling+extend;
                matrOrigin.ReadFrame(fIn, X, Y, startX, startY, h, w);

                seek = offsetOut + Nw * sampling * sizeof(RGBTRIPLE);

                fseek(f, seek, SEEK_SET);
                seek = Wout * sizeof(RGBTRIPLE) + paddingOut - (Wout % sampling);

                for (int y = sampling * Yframe; y < sampling * (Yframe + 1); ++y) {
                    for (int x = sampling * Nw; x < sampling * (Nw + 1); ++x) {
                        Y1 = (x + dx) * sinA + (y + dy) * cosA;
                        X1 = (x + dx) * cosA - (y + dy) * sinA;

                        if (X1 >= extend && X1 <= Win + extend - 1 && Y1 >= extend && Y1 <= Hin + extend - 1) {
                            X1 = X1 - X + extend;
                            Y1 = Y1 - Y + extend;


                            lineOut[x - sampling * Nw] = matrOrigin.getLansGlobFrame(Y1, X1);
                        }
                        else {
                            lineOut[x - sampling * Nw] = black;
                        }
                    }
                    fwrite(lineOut.data(), Wout * 3, 1, f);//запись в bmp
                    fseek(f, seek, SEEK_CUR);
                }


            }
        }

        if (Hout % sampling) {
            for (int Xframe = 0; Xframe < Nw; ++Xframe) {
                FrameCoordinate(Xframe, Nh, minX, minY, maxX, maxY);

                int X = minX, Y = minY;
                int startX = 0, startY = 0;
                int h = sampling, w = sampling;
                if (minX < 0) {
                    X = 0;
                    startX = -minX;
                    w -= startX;
                }
                if (minY < 0) {
                    Y = 0;
                    startY = -minY;
                    h -= startY;
                }
                if (maxY > Hin - 1) {
                    h -= (maxY - Hin);
                }
                w = Wout % sampling + extend;
                matrOrigin.ReadFrame(fIn, X, Y, startX, startY, h, w);

                seek = offsetOut + Nw * sampling * sizeof(RGBTRIPLE);

                fseek(f, seek, SEEK_SET);
                seek = Wout * sizeof(RGBTRIPLE) + paddingOut - (Wout % sampling);

                for (int y = sampling * Nh; y < sampling * (Nh + 1); ++y) {
                    for (int x = sampling * Xframe; x < sampling * (Xframe + 1); ++x) {
                        Y1 = (x + dx) * sinA + (y + dy) * cosA;
                        X1 = (x + dx) * cosA - (y + dy) * sinA;

                        if (X1 >= extend && X1 <= Win + extend - 1 && Y1 >= extend && Y1 <= Hin + extend - 1) {
                            X1 = X1 - X + extend;
                            Y1 = Y1 - Y + extend;


                            lineOut[x - sampling * Xframe] = matrOrigin.getLansGlobFrame(Y1, X1);
                        }
                        else {
                            lineOut[x - sampling * Xframe] = black;
                        }
                    }
                    fwrite(lineOut.data(), Wout * 3, 1, f);//запись в bmp
                    fseek(f, seek, SEEK_CUR);
                }
            }
        }

        seek = offsetOut + Wout * sizeof(RGBTRIPLE);
        fseek(f, seek, SEEK_SET);
        fwrite(&trash, 1, paddingOut, f);
        seek = Wout * sizeof(RGBTRIPLE);
        for (int i = 1; i < Hout; ++i) {
            fseek(f, seek, SEEK_CUR);
            fwrite(&trash, 1, paddingOut, f);
        }
    }
};

int main(int argc, char* argv[]) {
    setlocale(LC_ALL, "Russian");//подключение русского языка6
    //cout << __cplusplus << endl;

    //int64_t t0 = GetTickCount();

    BITMAPFILEHEADER bfhIn, bfhOut;
    BITMAPINFOHEADER bihIn, bihOut;
    int paddingIn, paddingOut;

    FileWithDes f1(argc > 2 ? argv[1] : sIn, "rb");
    FileWithDes f2(argc > 2 ? argv[2] : sOut, "wb");

    cout << "обрабатываем " << sIn << "\nпишем в " << sOut;

    //считали шапку бмп
    fread(&bfhIn, sizeof(bfhIn), 1, f1.getF());
    fread(&bihIn, sizeof(bihIn), 1, f1.getF());

    paddingIn = (4 - (bihIn.biWidth * 3) % 4) % 4;

    int S1 = (sinA + cosA) * sampling;

    MATR matr(S1, S1, bfhIn.bfOffBits, bihIn.biWidth, paddingIn);
    //matr.FillAll(f1.getF(), paddingIn);

    DoOutFile DoFile2(bihIn.biHeight, bihIn.biWidth, bihOut.biWidth, bihOut.biHeight, paddingOut);

    bihOut.biSize = sizeof(bihOut);
    //bihOut.biWidth = abs(bihIn.biWidth * cosA) + abs(bihIn.biHeight * sinA) + 2;
    //bihOut.biHeight = abs(bihIn.biWidth * sinA) + abs(bihIn.biHeight * cosA) + 2;
    bihOut.biPlanes = 1;
    bihOut.biBitCount = 24;
    bihOut.biCompression = 0;
    bihOut.biSizeImage = bihOut.biWidth * bihOut.biHeight * 3;
    bihOut.biXPelsPerMeter = 2835;
    bihOut.biYPelsPerMeter = 2835;
    bihOut.biClrUsed = 0;
    bihOut.biClrImportant = 0;

    bfhOut.bfType = 19778;
    bfhOut.bfReserved1 = 0;
    bfhOut.bfReserved2 = 0;
    bfhOut.bfOffBits = sizeof(bfhOut) + sizeof(bihOut);
    bfhOut.bfSize = sizeof(bfhOut) + sizeof(bihOut) + bihOut.biSizeImage;

    DoFile2.setOffset(bfhOut.bfOffBits);

    fwrite(&bfhOut, sizeof(bfhOut), 1, f2.getF());
    fwrite(&bihOut, sizeof(bihOut), 1, f2.getF());

    cout << "\n\nразмер исходного изображения: " << bihIn.biHeight << "*" << bihIn.biWidth << endl;
    cout << "\n\nразмер итогового изображения: " << bihOut.biHeight << "*" << bihOut.biWidth << endl;

    DoFile2.OutFile(bihIn.biHeight, bihIn.biWidth, f2.getF(), matr, f1.getF());


    return 0;
}